<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://deepbaksu.github.io</id>
    <title>딥백수 • Posts by &#34;jinyoung song&#34; tag</title>
    <link href="https://deepbaksu.github.io" />
    <updated>2020-11-22T16:58:43.000Z</updated>
    <category term="Mo Kweon" />
    <category term="go" />
    <category term="golang" />
    <category term="dependency injection" />
    <category term="wire" />
    <category term="uber-go" />
    <category term="fx" />
    <category term="Hyunggi Chang" />
    <category term="AI" />
    <category term="딥러닝" />
    <category term="로보틱스" />
    <category term="YouTube" />
    <category term="News" />
    <category term="Hyunseok Jeong" />
    <category term="Software Architecture" />
    <category term="Agile" />
    <category term="Architect" />
    <category term="Jinyoung Song" />
    <category term="데이터분석" />
    <category term="통계분석" />
    <category term="통계학" />
    <category term="통계역사" />
    <category term="비트코인" />
    <category term="제국주의" />
    <category term="미래전망" />
    <category term="플랫폼전략" />
    <category term="디지털자산" />
    <category term="microservice" />
    <category term="CQRS" />
    <category term="architecture" />
    <category term="software engineering" />
    <category term="선지원" />
    <category term="후고민" />
    <category term="선지원 후고민" />
    <category term="실험" />
    <category term="Apply Driven Study" />
    <category term="생존" />
    <category term="멘토링" />
    <category term="용기" />
    <category term="free web server" />
    <category term="heroku" />
    <category term="aws" />
    <category term="gcp" />
    <category term="netlify" />
    <category term="github actions" />
    <category term="구글애널리틱스" />
    <category term="GA" />
    <category term="Google Analytics" />
    <category term="Data Analysis" />
    <category term="Web Log Analysis" />
    <category term="Happy working" />
    <category term="Mindfulness" />
    <category term="Noble Eightfold Path" />
    <category term="gRPC" />
    <category term="Go" />
    <category term="REST" />
    <category term="존버" />
    <category term="jonber" />
    <category term="딥백수" />
    <category term="회고" />
    <category term="bluehole" />
    <category term="krafton" />
    <category term="communication" />
    <category term="GitHub CLI" />
    <category term="Gist" />
    <category term="Leaning by Doing" />
    <category term="Repo" />
    <category term="Alias" />
    <category term="습관" />
    <category term="중용" />
    <category term="꾸준함" />
    <category term="성실" />
    <category term="대화" />
    <category term="비폭력대화" />
    <category term="Golang" />
    <category term="Slice" />
    <category term="example" />
    <category term="Windows" />
    <category term="PowerShell" />
    <category term="PowerShell script" />
    <category term="Git" />
    <category term="Prompt" />
    <category term="Martin Fowler" />
    <category term="Refactoring" />
    <category term="Principles" />
    <category term="파이썬" />
    <category term="실무" />
    <category term="데이터분석 실무" />
    <category term="네트워크 분석" />
    <category term="최적화" />
    <category term="시뮬레이션" />
    <category term="자연어처리" />
    <category term="회귀" />
    <category term="예측 분석" />
    <category term="semantic release" />
    <category term="semantic version" />
    <category term="slack" />
    <category term="bot" />
    <category term="oauth" />
    <category term="Github Action" />
    <category term="Slack" />
    <category term="Automation" />
    <category term="자동화" />
    <category term="cron" />
    <category term="Seunghwan Chang" />
    <category term="English" />
    <category term="would" />
    <category term="ppt" />
    <category term="발표" />
    <category term="consulting" />
    <category term="보고서" />
    <category term="파워포인트" />
    <category term="PT고자" />
    <category term="ppt고자" />
    <category term="ppt공포" />
    <category term="슬라이드" />
    <category term="Martin Hwang" />
    <category term="Ray" />
    <category term="distributed computing" />
    <category term="parallel computing" />
    <entry>
        <id>https://deepbaksu.github.io/2020/11/22/ask-data/</id>
        <title>리마인드용으로 훑어볼만한 책 - 데이터를 부탁해</title>
        <link rel="alternate" href="https://deepbaksu.github.io/2020/11/22/ask-data/"/>
        <content type="html">&lt;h2 id=&#34;ai-ai-ai&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ai-ai-ai&#34;&gt;&lt;/a&gt; AI AI AI!!!&lt;/h2&gt;
&lt;p&gt;그야말로 AI의 시대입니다. 뉴스, 유튜브, 페이스북에 AI에 대한 이야기가 안나오는 날이 있을까 싶을 정도로 AI의 시대에 살고 있는거 같습니다. 그렇기 때문에 우리는 하루하루 마음을 졸이며 살고 있죠. 이 두려움은 업종, 직군을 따지지 않고 깊숙히 스며드는 것 같습니다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2020/11/22/ask-data/justice.jpg&#34; alt=&#34;AI AI AI!&#34; /&gt;&lt;/p&gt;
&lt;p&gt;이런 이유로 AI에 대한 책이 많이 나옵니다. 특히 인공지능쪽을 잘 모르는 분들을 위한 책들도 많이 나오고 있습니다. 그런 책들의 흐름은 대부분 이런 식입니다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;선형회귀를 통한 예측&lt;/li&gt;
&lt;li&gt;로지스틱 회귀 예측&lt;/li&gt;
&lt;li&gt;랜덤포레스트를 통한 분류&lt;/li&gt;
&lt;li&gt;머신러닝에서 더 깊숙히 들어간 딥러닝 모델.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;아무것도 모르던 시기엔 이게 전부인줄 알았습니다. 그런데 그렇지 않더라고요.&lt;/p&gt;
&lt;h2 id=&#34;what-is-data-analyst-who-is-data-analyst&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#what-is-data-analyst-who-is-data-analyst&#34;&gt;&lt;/a&gt; What is Data Analyst? Who is Data Analyst?&lt;/h2&gt;
&lt;p&gt;비전공자에서 IT쪽으로 오신 분이라면 공감하실지 모르겠는데, 손정의가 아무리 &#39;AI AI AI!!!&#39;라고 외쳐도 결국엔 알고리즘, 운영체제, 수학, 통계학과 같이 기본기가 중요하고 실제로 기업에서도 이런 기본기를 갖춘 사람을 선호한다는 걸 알게 됩니다. 프레임워크를 쓰는 건 어쩌면 그에 비하면 너무 간단한 문제일 수 있으니까요.&lt;/p&gt;
&lt;p&gt;그래서 저는 고민을 많이 하고 있습니다. 데이터분석 입문 수업을 광고하는 곳에서는 데이터 분석가가 되는 게 쉬우면서도 연봉을 올리기 좋다고 하지만, 실제로는 그렇지 않거든요.&lt;/p&gt;
&lt;p&gt;단순히 pandas써서 데이터 전처리 조금 할 줄 알고, sklearn과 같은 머신러닝 프레임워크 조금 다룰 줄 안다고 해서 데이터 분석가가 될 수 있다고 할 수는 없으니까요.&lt;/p&gt;
&lt;p&gt;그럼 데이터 분석가란 무엇일까요? 데이터 분석가란 누구인걸까요? 좋은 데이터 분석가란 어떤 사람일까요?&lt;/p&gt;
&lt;h2 id=&#34;find-the-essence-prove-by-action&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#find-the-essence-prove-by-action&#34;&gt;&lt;/a&gt; Find the Essence. Prove by Action&lt;/h2&gt;
&lt;blockquote&gt;&lt;p&gt;The only thing that doesn’t change is the fact that it changes&lt;/p&gt;
&lt;footer&gt;&lt;strong&gt;Heraclitos&lt;/strong&gt;&lt;/footer&gt;&lt;/blockquote&gt;
&lt;p&gt;사실 저는 저 질문들에 대한 답을 아직까지 잘 모르겠어요. 답을 찾아가는 과정인 것 같다는 생각을 하기도 해요. 가끔 보면 저 질문들에 대한 답을 안다는 듯 잘난척을 하는 글들이 보이곤 하죠. 정말 잘 하시는 분들인 경우도 있지만, 광고글이거나 잘 모르는데 잘 아는척 하는 글을 볼 때가 많이 있어요.&lt;/p&gt;
&lt;p&gt;모든 IT분야가 그렇듯, 데이터분석 쪽도 계속해서 빠른 속도로 변화가 일어나고 있어요. 그렇기 때문에 혼란스러운게 아닐까 생각이 들어요. 과거, 데이터분석은 특별한 훈련을 받은 사람들만 했다면 이제는 점점 더 누구나 쉽고 간단하게 분석을 할 수 있고 워크플로우까지 만들 수 있는 시대가 왔으니까요.&lt;/p&gt;
&lt;p&gt;그렇다 해도 데이터분석가에게 본질적으로 변하지 않는 요구능력은 데이터를 바라보는 능력이지 않을까요? 물론 데이터를 바라본다는 건 비즈니스 관점으로도 바라볼 수 있고, 백엔드 개발 관점으로도 바라볼 수 있고 여러가지 관점으로 바라볼 수 있겠죠. 하지만 데이터 분석가에겐 기본적으로 통계학적 관점이 필요하지 않을까 생각이 들어요. 조금 더 엄격하게 데이터를 바라볼 수 있게 해주니까요.&lt;/p&gt;
&lt;p&gt;그렇기 때문에라도 통계공부는 해야 하는데 손이 잘 안가긴 하죠.&lt;/p&gt;
&lt;p&gt;이 책은 이런 여정을 떠나는 사람이 잠시 쉬며 훑어볼 용도로 괜찮은 책이에요. 아예 모르는 사람에게는 적합하지 않고, 익히는 과정에 있는 사람들이 이런게 있구나 하는 전체적인 조망을 보는 데 유용한 책. 그런 책이에요.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2020/11/22/ask-data/book_cover.jpg&#34; alt=&#34;책 표지 - 출처 : yes24&#34; /&gt;&lt;/p&gt;
&lt;p&gt;주말 하루 시간을 잡으면 금방 읽을 수 있는 책이라 너무 무겁지 않아서 좋았어요.&lt;/p&gt;
&lt;p&gt;책 링크 : &lt;a href=&#34;https://www.aladin.co.kr/shop/wproduct.aspx?ItemId=188000067&#34;&gt;https://www.aladin.co.kr/shop/wproduct.aspx?ItemId=188000067&lt;/a&gt;&lt;/p&gt;
</content>
        <category term="Jinyoung Song" />
        <category term="데이터분석" />
        <category term="통계분석" />
        <category term="통계학" />
        <category term="통계역사" />
        <updated>2020-11-22T16:58:43.000Z</updated>
    </entry>
    <entry>
        <id>https://deepbaksu.github.io/2020/11/19/google-analytics/</id>
        <title>분석이 궁금하다면 - 고객이 보이는 구글 애널리틱스</title>
        <link rel="alternate" href="https://deepbaksu.github.io/2020/11/19/google-analytics/"/>
        <content type="html">&lt;h2 id=&#34;데이터분석머신러닝과-적정-기술&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#데이터분석머신러닝과-적정-기술&#34;&gt;&lt;/a&gt; 데이터분석(머신러닝)과 적정 기술&lt;/h2&gt;
&lt;p&gt;이제 데이터분석(머신러닝)이 중요하다는 명제는 명제가 아닌 공리가 된듯 합니다. 그래서 파이썬, R을 배우려는 사람도 많고 수학과 통계학을 배우려는 분도 많아진 거 같습니다. 물론 여기엔 저도 포함됩니다.&lt;/p&gt;
&lt;p&gt;그런데 배워도 뭔가 빈 느낌을 받곤 합니다. 직장인이 기술을 배울 땐 재미로 배운다기보다 실무에 적용해서 성과를 올리기 위해 배우는 경우가 많은데, 쉽게 업무에 적용하기 어렵기 때문입니다. 여기에는 여러가지 이유가 있겠지만, 기술이 체화되고 익숙해지는 데 시간이 걸리는 게 첫 번째 이유라고 생각합니다. 그 다음 이유는 머신러닝이나 딥러닝을 실무에 적용하는 건 본질적으로 쉬운 일이 아니기 때문일겁니다. 데이터를 어떻게 적재하고 어떻게 뽑아낼 것이며 어떻게 학습시킬 것인지도 고민해야 하며 이런 과정을 통해 업무 프로세스를 어떻게 바꿀지도 고민해야 하기 때문에 세밀한 기획과 함께 시행착오 경험이 필요합니다.&lt;/p&gt;
&lt;p&gt;그렇다면 데이터분석을 포기해야 할까요?&lt;/p&gt;
&lt;p&gt;그렇지 않다고 생각합니다.&lt;/p&gt;
&lt;p&gt;작은 성공 경험의 축적이 필요하다고 생각할 뿐입니다. 이를 위해 적합한 툴이 SQL 그리고 이번에 소개할 구글 애널리틱스(이하 GA)입니다.&lt;br /&gt;
SQL이 대량의 데이터를 간단한 문법으로 조회하는 데 편리한 툴이라면, 구글 애널리틱스는 지표에 대한 감각을 길러주고 고객지향적 분석을 익히는 데 좋은 적정기술이라고 할 수 있습니다.&lt;/p&gt;
&lt;p&gt;원래 적정기술의 의미는 ‘지역사회의 인프라 수준을 고려하여 만드는 기술 또는 그 생산물을 이르는 말’(출처 : 나무위키)이지만, 지역사회라는 단어를 이 글을 읽으시는 분 혹은 읽으시는 분이 속한 팀이라고 치환해본다면 무리가 없는 용어일 것입니다.&lt;/p&gt;
&lt;h2 id=&#34;its-the-metrics-stupid&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#its-the-metrics-stupid&#34;&gt;&lt;/a&gt; It’s the metrics, stupid!&lt;/h2&gt;
&lt;p&gt;병원에 가본적이 있으신가요? 병원에 가면 병에 따라 다르지만, 혈압을 체크하거나 혈당을 체크하거나 하는 등 의사들은 모두 &#39;지표’를 확인합니다. 이를 통해 환자의 상태를 파악하고 심각한 환자의 경우 지표의 변동에 따라 시시각각 처방 또는 응급처치를 하곤 하지요. 이와 유사하게, 데이터분석을 하기 위해선 지표에 대한 지식과 감각을 길러야 한다고 생각합니다. 특히 저를 비롯한 많은 초심자분들은 화려하고 멋져보이는 다른 기법보다 먼저 기본적인 지표를 익혀야 한다고 생각합니다.&lt;/p&gt;
&lt;p&gt;예를 들어볼까요?&lt;/p&gt;
&lt;p&gt;같이 일하는 동료가 회사의 웹사이트 가입인원이 100만명이 넘었다는 &#39;사실’을 여러분에게 주었을 때 여러분은 어떤 생각이 드시나요? 당연하죠. ‘오 힘들었겠다’, ‘대단하네’, ‘5천만 국민중에 100만명이나 가입했군’ 기타 등등&lt;/p&gt;
&lt;p&gt;여러가지 생각이 드시겠지만 우리가 어떤 걸 해야할지 고객이 어떤 생각을 가지고 있는지에 대해서 파악이 되시나요? 전혀 아닐겁니다. 그냥 많이 가입했다는 느낌만 줄 뿐이죠.&lt;/p&gt;
&lt;p&gt;그런데 만약 같이 일하는 동료가 이렇게 말했다면 어떨까요? ‘우리 서비스를 100만명이나 가입했는데, 하루동안 우리 서비스를 이용하는 고객은 20명이에요. 우리 어떻게 하죠?’ 슬슬 위기감이 들지 않나요? 왜 그럴까요? 하루 당 이용 고객이라는 비율로 측정되어 있기 때문이죠. 또한 20명이라는 숫자는 100만명과 &#39;비교’해볼 때 너무나도 적은 숫자이기 때문에 위기감을 불러일으키죠.&lt;/p&gt;
&lt;p&gt;이게 지표의 힘이고 우리가 분석을 통해 얻고자 하는 것입니다. 그리고 GA를 공부하는 목표이기도 합니다.&lt;/p&gt;
&lt;h2 id=&#34;누구나-그럴-듯한-계획이-있어-이탈하기-전까진&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#누구나-그럴-듯한-계획이-있어-이탈하기-전까진&#34;&gt;&lt;/a&gt; 누구나 그럴 듯한 계획이 있어 이탈하기 전까진&lt;/h2&gt;
&lt;p&gt;마케팅 서적을 보다보면 멋있는 말들이 홍수처럼 범람합니다. 고객지향을 해야한다는 등 어떻다는 등 그런데 결국 고객이 ‘왜’ 이탈하는지 우리가 ‘어떤’ 액션을 취해야 하는지 모르면 그냥 뜬구름 잡는 선문답으로 끝날 가능성이 높습니다.&lt;/p&gt;
&lt;p&gt;그래서 이 책은 구글 애널리틱스의 사용법과 함께 구체적인 조언을 건네줍니다. 책 124페이지를 보겠습니다.&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;홈페이지에 접속한 사용자가 한 페이지만 보고 떠나는 경우 이탈률이 증가합니다. 시작 페이지에서 이탈률이 높게 나타난다는 것은 사용자가 홈페이지를 더 볼 것이 없다고 판단했다는 것을 의미합니다. 사용자가 원하는 정보가 없는지 점검해야 합니다.&lt;/p&gt;
&lt;p&gt;사용자가 특정 페이지에서 홈페이지를 떠나면 종료율이 증가합니다. 회원가입 페이지에서 종료율이 높게 나타난다는 것은 사용자가 회원가입을 진행하다가 홈페이지를 떠난다는 것을 의미합니다. 사용자가 회원가입을 어렵게 느끼고 있지는 않은지 점검해야 합니다.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;선문답이 아닌 숫자에 기반한 액션 플랜을 우리에게 제공해준다는 걸 알 수 있습니다. 추상적인 내용으로 커뮤니케이션할 때보다 더 원활한 커뮤니케이션이 가능할거란 걸 예상할 수 있습니다.&lt;/p&gt;
&lt;p&gt;지금 이 블로그를 운영하는 딥백수 블로그에도 구글애널리틱스가 탑재되어있습니다. 이 블로그를 통해 예를 들어볼까요?&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2020/11/19/google-analytics/churn.jpg&#34; alt=&#34;Session &amp;amp; Churn rate&#34; /&gt;&lt;/p&gt;
&lt;p&gt;어떤가요? 숫자만 봐도 느낌이 오시지 않나요?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;데스크톱의 이탈율은 80%인데 모바일은 87% 이탈율을 가지고 있네? 왜 그럴까?&lt;/li&gt;
&lt;li&gt;데스크톱의 세션당 페이지수는 1.54개인데 모바일은 1.12개구나.&lt;/li&gt;
&lt;li&gt;데스크톱의 세션시간은 37초인데 모바일은 10초구나&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;그럼 이런 가설을 세워볼 수 있습니다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;지금은 Hexo로 블로그를 만들고 있는데, 모바일 유저가 보기 편한 다른 프레임워크를 쓰면 유저의 이탈율이 더 낮아질 수도 있겠다&lt;/li&gt;
&lt;li&gt;지금 Hexo블로그 테마를 모바일 유저가 보기 편한 테마로 바꾸면 유저의 이탈율이 더 낮아질 수도 있겠다&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;이런 식으로 말이죠.&lt;/p&gt;
&lt;p&gt;그리고 마찬가지로 지표를 통해 검증하거나 상황을 점검할 수 있습니다.&lt;br /&gt;
여기에 사용되는 지표가 꼭 이탈율일 이유는 없습니다. 다른 지표를 통해서 다른 분석을 통해서 볼 수 있죠.&lt;/p&gt;
&lt;p&gt;이 책은 2018년에 1판이 출간되었다가 올해 2월 전자상거래, 옵티마이즈, 태그매니저 등 기능에 대한 내용을 추가한 개정판으로 다시 출간되었습니다.&lt;/p&gt;
&lt;p&gt;저는 2판은 아직 못보고 1판을 봤는데 1판만으로도 많은 걸 배우고 실무에도 활용할 수 있었습니다.&lt;br /&gt;
일독을 추천드립니다.&lt;/p&gt;
</content>
        <category term="Jinyoung Song" />
        <category term="구글애널리틱스" />
        <category term="GA" />
        <category term="Google Analytics" />
        <category term="Data Analysis" />
        <category term="Web Log Analysis" />
        <updated>2020-11-19T05:17:52.000Z</updated>
    </entry>
    <entry>
        <id>https://deepbaksu.github.io/2020/09/18/slack-github-action-automation/</id>
        <title>GitHub Action을 이용한 알림 자동화</title>
        <link rel="alternate" href="https://deepbaksu.github.io/2020/09/18/slack-github-action-automation/"/>
        <content type="html">&lt;h2 id=&#34;1-why-did-i-do-this&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#1-why-did-i-do-this&#34;&gt;&lt;/a&gt; 1. Why did I do this?&lt;/h2&gt;
&lt;p&gt;간단합니다. 회사 슬랙에 과제 알림을 자동화시키고 싶었기 때문입니다. 어떻게 해야 하는지 알기 위해 시중에 나온 자동화 관련 책들을 펼쳤습니다. 크롤러 만드는 방법과 crontab에 대해서 설명을 잘해주었지만 문제가 있었죠. 제가 따로 쓸 만한 서버가 없었습니다. 기본적으로 자동화는 24시간 돌아가는 서버를 통해서 진행하는 경우가 많습니다. 그렇다고 간단한 알림을 가지고 클라우드로 돌리긴 좀 손이 가질 않았습니다. 즉, 돈을 들이지 않고 자동화를 시키고 싶었습니다.&lt;/p&gt;
&lt;p&gt;그러던 중 어떤 생각 하나가 떠올랐습니다.&lt;/p&gt;
&lt;p&gt;지금 제가 이 글을 쓰고 있는 딥백수 블로그는 Branch를 나누고 GitHub Action을 format check이라든지 테스트를 자동화하는데, GitHub Action을 통해서 제가 가진 문제를 해결할 수 있을 거라고 생각했습니다.&lt;/p&gt;
&lt;p&gt;다행히 GitHub Action에 익숙한 Mo Kweon님이 계시기에 페어 프로그래밍을 하면서 하나하나 가르쳐주셨습니다. 다른 분께 배운 지식이기에 당연히 나눠야 한다고 생각했고 이 글을 쓰며 혹시 비슷한 고민을 하시는 분께 매뉴얼이 되었으면 합니다.&lt;/p&gt;
&lt;h2 id=&#34;2-make-a-crawler&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#2-make-a-crawler&#34;&gt;&lt;/a&gt; 2. Make a Crawler&lt;/h2&gt;
&lt;p&gt;크롤러는 만드셨다고 가정하겠습니다.&lt;/p&gt;
&lt;h2 id=&#34;3-make-a-slack-channel&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#3-make-a-slack-channel&#34;&gt;&lt;/a&gt; 3. Make a Slack Channel&lt;/h2&gt;
&lt;p&gt;알림을 받을 슬랙 채널을 만들어줍니다. 테스트해야 하는 채널이기 때문에 다른 슬랙 멤버들이 메시지 수신을 하지 않도록 혼자만의 채널에서 테스트하시는 걸 권합니다. 저는 alert라는 채널을 만들었습니다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2020/09/18/slack-github-action-automation/create_slack_channel.jpg&#34; alt=&#34;슬랙 채널 생성&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;4-make-a-slack-app&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#4-make-a-slack-app&#34;&gt;&lt;/a&gt; 4. Make a Slack App&lt;/h2&gt;
&lt;p&gt;이제 슬랙 알림을 위한 설정을 들어가야 합니다. 아래 사진처럼 하늘색 동그라미를 쳐놓은 버튼을 클릭해주세요.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2020/09/18/slack-github-action-automation/slack_setting.jpg&#34; alt=&#34;Slack Setting&#34; /&gt;&lt;/p&gt;
&lt;p&gt;들어가 보면 다음과 같은 페이지에 접속되실 겁니다. 하늘색 동그라미를 쳐놓은 검색창에 webhook이라고 입력해준 뒤 검색해주세요.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2020/09/18/slack-github-action-automation/slack_app_directory.jpg&#34; alt=&#34;Slack App directory&#34; /&gt;&lt;/p&gt;
&lt;p&gt;그러면 다음과 같이 결과 창이 뜰 텐데 하늘색 동그라미를 쳐놓은 Incoming Webhooks를 클릭해주세요.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2020/09/18/slack-github-action-automation/result_search_webhooks.jpg&#34; alt=&#34;Result Searching webhooks&#34; /&gt;&lt;/p&gt;
&lt;p&gt;그럼 다음과 같이 Webhooks에 대한 소개를 보실 수 있습니다. JSON을 사용해서 POST 하는군요.(크롤러에서 JSON으로 데이터를 보내줘야 한다는 의미입니다) 당연히 Add 해줘야겠죠?&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2020/09/18/slack-github-action-automation/incoming_webhooks.jpg&#34; alt=&#34;Incoming Webhooks&#34; /&gt;&lt;/p&gt;
&lt;p&gt;어떤 채널에 메시지를 보낼지 설정을 해줘야 합니다. 이전에 만들었던 채널을 설정해준 뒤 Add 해줍니다.&lt;/p&gt;
&lt;h2 id=&#34;5-configure-webhooks&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#5-configure-webhooks&#34;&gt;&lt;/a&gt; 5. Configure Webhooks&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;/2020/09/18/slack-github-action-automation/webhooks_configuration.jpg&#34; alt=&#34;Webhooks Configuration&#34; /&gt;&lt;/p&gt;
&lt;p&gt;그러면 다음과 같이 Setup Instructions 화면이 출력되는데 여기에 가장 중요한 Webhook URL이 있습니다. 이 URL에 JSON 데이터를 보내면 우리가 원하는 대로 메시지가 슬랙 채널에 전송된다는 의미입니다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2020/09/18/slack-github-action-automation/webhooks_setup_instructions.jpg&#34; alt=&#34;Webhooks Setup Instructions&#34; /&gt;&lt;/p&gt;
&lt;p&gt;당연히 이 Webhook URL이 다른 사람에게 알려지면 안 되겠죠?&lt;/p&gt;
&lt;p&gt;화면을 아래로 쭉 내려보면 Example이라고 해서 어떻게 데이터가 Posting 되는지 시험해볼 수 있는 API가 있습니다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2020/09/18/slack-github-action-automation/webhooks_example.jpg&#34; alt=&#34;Webhooks Example&#34; /&gt;&lt;/p&gt;
&lt;p&gt;한번 시험해볼까요? 해당 코드를 복사한 뒤 터미널 창에 붙여넣기 해보겠습니다. 다음과 같이 채널에 메시지가 잘 전달된 걸 보실 수 있을 겁니다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2020/09/18/slack-github-action-automation/webhooks_example_result.jpg&#34; alt=&#34;Webhooks Example API Result&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;6-edit-the-crawler&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#6-edit-the-crawler&#34;&gt;&lt;/a&gt; 6. Edit the Crawler&lt;/h2&gt;
&lt;p&gt;Webhooks설정까지 마쳤으니 본격적으로 GitHub Action으로 들어가 보겠습니다. 그 전에 크롤러에 다음과 같은 코드를 추가해주세요.&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;url = os.environ.get(&lt;span class=&#34;string&#34;&gt;&amp;#x27;SLACK_URL&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;slack_post_text&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;url, text&lt;/span&gt;):&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    result = requests.post(url, json = &amp;#123;&lt;span class=&#34;string&#34;&gt;&amp;quot;text&amp;quot;&lt;/span&gt;: text&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; result&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Webhooks를 설정하면서 Webhooks URL은 다른 사람에게 보여선 안 된다고 했습니다. 그렇기 때문에 우리는 이 URL을 SLACK_URL이란 환경변수로 지정해서 다른 사람에겐 보이지 않되 코드에선 변수를 가져와 사용할 수 있도록 만들어줄 겁니다.&lt;/p&gt;
&lt;p&gt;그리고 &lt;code&gt;slack_post_text&lt;/code&gt; 라는 함수를 통해 슬랙에 보내고자 하는 메시지를 JSON으로 URL에 전달해줍니다.&lt;/p&gt;
&lt;h2 id=&#34;7-configure-github-repository-settings&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#7-configure-github-repository-settings&#34;&gt;&lt;/a&gt; 7. Configure GitHub Repository Settings&lt;/h2&gt;
&lt;p&gt;GitHub 저장소 하나를 만들어준 뒤, 크롤러를 저장소에 push 해주세요. 그리고 우리가 그토록 기다리던 &lt;strong&gt;GitHub Action&lt;/strong&gt;을 진행하기 위해 저장소 메뉴 중 Pull requests 오른쪽에 있는 Action을 클릭해주세요.&lt;/p&gt;
&lt;p&gt;라고 하고 싶지만, 우리에겐 조금 더할 일이 남아있습니다. 환경변수를 지정해줘야 한다고 했던 거 기억하시나요?&lt;/p&gt;
&lt;p&gt;맞습니다. 그 환경변수를 지정해보도록 하겠습니다.&lt;/p&gt;
&lt;p&gt;Settings에 들어가 주시고 아래 하늘색 표시해놓은 것처럼 Secrets를 클릭해주세요.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2020/09/18/slack-github-action-automation/github_settings.jpg&#34; alt=&#34;GitHub Settings&#34; /&gt;&lt;/p&gt;
&lt;p&gt;왠지 뭘 해야 할지 감 오시죠? 맞습니다. New secret 버튼을 눌러주세요.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2020/09/18/slack-github-action-automation/github_secrets.jpg&#34; alt=&#34;GitHub Secrets&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Name엔 전에 말씀드렸던 SLACK_URL을 입력해주시고, Value에 Webhooks URL을 입력해주신 다음 추가해주세요.&lt;br /&gt;
&lt;img src=&#34;/2020/09/18/slack-github-action-automation/add_secret.jpg&#34; alt=&#34;Add Secrets&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;8-make-a-github-action&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#8-make-a-github-action&#34;&gt;&lt;/a&gt; 8. Make a GitHub Action&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;드디어&lt;/strong&gt; 정말 우리가 기다리고 기다리던 GitHub Action을 할 시간입니다.&lt;/p&gt;
&lt;p&gt;GitHub Action에 관한 글인데 뭐가 이렇게 많냐고요? 뭐 어쩔 수 없습니다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2020/09/18/slack-github-action-automation/experience_kim.jpg&#34; alt=&#34;좋은 경험이다 생각하고... 흠흠... - 출처 YTN&#34; /&gt;&lt;/p&gt;
&lt;p&gt;데이터 분석을 배울 때 거의 귀가 닳도록 듣는 말이 전처리에 전체 프로젝트 중 80%의 시간을 쏟는다는 얘기인데, Github Action도 마찬가지인 듯 합니다. 환경설정을 해줘야 할 게 많이 있어서 시간이 오래 걸렸습니다.&lt;/p&gt;
&lt;p&gt;각설하고, 여기서는 크롤러를 python으로 만들었다고 가정하겠습니다.&lt;/p&gt;
&lt;p&gt;하늘색 표시를 해놓은 Python application에서 Set up this workflow를 클릭해주세요.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2020/09/18/slack-github-action-automation/github_action_python_application.jpg&#34; alt=&#34;Select Workflow&#34; /&gt;&lt;/p&gt;
&lt;p&gt;workflow 내용을 다음과 같이 바꿔주세요.&lt;/p&gt;
&lt;figure class=&#34;highlight yaml&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;attr&#34;&gt;name:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;Python&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;application&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;attr&#34;&gt;on:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;schedule:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;bullet&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;cron:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;5 0 * * *&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;workflow_dispatch:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;inputs:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;attr&#34;&gt;logLevel:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;attr&#34;&gt;description:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;Log level&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;attr&#34;&gt;required:&lt;/span&gt; &lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;attr&#34;&gt;default:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;warning&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;attr&#34;&gt;tags:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;attr&#34;&gt;description:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;Test scenario tags&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;attr&#34;&gt;jobs:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;build:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;runs-on:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;ubuntu-latest&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;steps:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;bullet&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;uses:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;actions/checkout@v2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;bullet&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;name:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;Set&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;up&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;Python&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;3.8&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;attr&#34;&gt;uses:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;actions/setup-python@v2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;attr&#34;&gt;with:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &lt;span class=&#34;attr&#34;&gt;python-version:&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;3.8&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;bullet&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;name:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;Install&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;dependencies&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;attr&#34;&gt;run:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;|&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;          python -m pip install --upgrade pip&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;          pip install bs4 requests&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&lt;/span&gt;      &lt;span class=&#34;bullet&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;run:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;python&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;크롤러이름.py&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;attr&#34;&gt;env:&lt;/span&gt; &lt;span class=&#34;comment&#34;&gt;# Or as an environment variable&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &lt;span class=&#34;attr&#34;&gt;SLACK_URL:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;$&amp;#123;&amp;#123;&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;secrets.SLACK_URL&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#125;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;9-edit-workflow&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#9-edit-workflow&#34;&gt;&lt;/a&gt; 9. Edit workflow&lt;/h2&gt;
&lt;p&gt;특히 들여쓰기에 유의해주세요. 파이선을 해보셨다면 아시겠지만, 들여쓰기 하나 때문에 빨간색 에러가 발생하곤 합니다. 위의 8번 챕터에서는 코드 설명 없이 우선 고치라고 말씀드렸는데 여기서 하나하나 설명해 드리도록 하겠습니다. 우선 &lt;strong&gt;on&lt;/strong&gt; 부분을 보겠습니다.&lt;/p&gt;
&lt;figure class=&#34;highlight yaml&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;attr&#34;&gt;on:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;schedule:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;bullet&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;cron:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;5 0 * * *&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;workflow_dispatch:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;inputs:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;attr&#34;&gt;logLevel:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;attr&#34;&gt;description:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;Log level&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;attr&#34;&gt;required:&lt;/span&gt; &lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;attr&#34;&gt;default:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;warning&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;attr&#34;&gt;tags:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;attr&#34;&gt;description:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;Test scenario tags&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;schedule&lt;/strong&gt; 밑에 있는 cron은 언제 해당 크롤러를 작동시킬지에 대한 내용입니다. 이에 대한 문법을 다 외우시는 것보다는 &lt;a href=&#34;https://crontab.guru/&#34;&gt;crontab.guru&lt;/a&gt;라는 사이트를 방문해서 원하시는 날짜 설정을 하시길 권해드리고 싶습니다. 주의할 사항은 설정되는 시간이 UTC(협정 시계시) 기준이라는 겁니다. 한국은 UTC+9를 설정해줘야 한다는 점을 유의해주세요.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;workflow_dispatch&lt;/strong&gt;부분은 해당 action이 작동하는지 작동하지 않는지 확인하기 위해 수동으로 GitHub Action을 작동시킬 수 있도록 해주는 코드입니다.&lt;/p&gt;
&lt;p&gt;그럼 다음으로 &lt;strong&gt;jobs&lt;/strong&gt;를 보겠습니다.&lt;/p&gt;
&lt;figure class=&#34;highlight yaml&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;attr&#34;&gt;jobs:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;build:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;runs-on:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;ubuntu-latest&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;steps:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;bullet&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;uses:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;actions/checkout@v2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;bullet&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;name:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;Set&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;up&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;Python&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;3.8&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;attr&#34;&gt;uses:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;actions/setup-python@v2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;attr&#34;&gt;with:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &lt;span class=&#34;attr&#34;&gt;python-version:&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;3.8&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;bullet&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;name:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;Install&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;dependencies&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;attr&#34;&gt;run:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;|&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;          python -m pip install --upgrade pip&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;          pip install bs4 requests&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&lt;/span&gt;      &lt;span class=&#34;bullet&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;run:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;python&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;크롤러이름.py&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;attr&#34;&gt;env:&lt;/span&gt; &lt;span class=&#34;comment&#34;&gt;# Or as an environment variable&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &lt;span class=&#34;attr&#34;&gt;SLACK_URL:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;$&amp;#123;&amp;#123;&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;secrets.SLACK_URL&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#125;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;대강 눈치채실 수도 있겠지만, runs-on을 보면 GitHub Action이 우분투 환경에서 작동한다는 것을 알 수 있습니다.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;- name: Install dependencies&lt;/strong&gt; 이 부분에선 익숙한 pip install이 등장합니다. 필요한 라이브러리가 있으시다면 추가해주세요.&lt;/p&gt;
&lt;p&gt;마지막으로 &lt;strong&gt;run&lt;/strong&gt; 부분에 크롤러를 실행할 수 있도록 해주시고 &lt;strong&gt;env&lt;/strong&gt;에는 그토록 강조했던 SLACK_URL 환경변수를 입력해줍니다.&lt;/p&gt;
&lt;p&gt;그렇게 한 뒤 화면 우상단에 있는 Start commit 버튼을 누르고 커밋해주세요.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2020/09/18/slack-github-action-automation/github_action_commit.jpg&#34; alt=&#34;GitHub Action Commit&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;10-test-github-action&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#10-test-github-action&#34;&gt;&lt;/a&gt; 10. Test GitHub Action&lt;/h2&gt;
&lt;p&gt;이제 테스트를 한 번 해보겠습니다.&lt;/p&gt;
&lt;p&gt;GitHub 저장소에서 Action 메뉴를 클릭해주세요. 그리고 하늘색 표시해 준 Python application을 클릭해주세요&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2020/09/18/slack-github-action-automation/workflow_test.jpg&#34; alt=&#34;workflow test&#34; /&gt;&lt;/p&gt;
&lt;p&gt;잘 작동하는지 아닌지 수동으로 확인해보겠습니다. Run workflow를 실행해주세요.&lt;/p&gt;
&lt;p&gt;그럼 슬랙 채널에 다음과 같이 메시지가 도착했음을 보실 수 있을 겁니다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2020/09/18/slack-github-action-automation/test_result.jpg&#34; alt=&#34;Test Results&#34; /&gt;&lt;/p&gt;
&lt;p&gt;여기까지 GitHub Action을 이용한 Slack 알림 자동화를 해보셨는데 어떠셨나요?&lt;/p&gt;
&lt;p&gt;많이 어려우셨나요? 그렇죠? 맞아요. 저도 많이 어렵더라고요.&lt;/p&gt;
&lt;p&gt;하지만 안되면 될 때까지, 계속해서 해보거나 &lt;a href=&#34;https://bit.ly/2Sqdnws&#34;&gt;딥백수 슬랙&lt;/a&gt;에 오셔서 질문해주시면 다른 구성원분들이 많이 도움을 주시지 않을까 생각을 합니다.&lt;/p&gt;
&lt;p&gt;사실 이 글을 쓰는 저는 컴맹에 가까운 수준이라 많이 어렵더라고요. 하나하나 이해하는 데 시간이 얼마나 많이 걸리던지… 그렇게 헤매던 저를 인내심을 가지고 가르쳐주신 Mo Kweon님께 감사하다는 말을 마지막으로 남기고 싶습니다.&lt;/p&gt;
&lt;p&gt;긴 글 읽어주셔서 고맙습니다.&lt;/p&gt;
</content>
        <category term="Jinyoung Song" />
        <category term="Github Action" />
        <category term="Slack" />
        <category term="Automation" />
        <category term="자동화" />
        <category term="cron" />
        <updated>2020-09-18T14:54:37.000Z</updated>
    </entry>
    <entry>
        <id>https://deepbaksu.github.io/2020/09/10/writing-report-skill/</id>
        <title>보고서 작성의 기술 책 리뷰</title>
        <link rel="alternate" href="https://deepbaksu.github.io/2020/09/10/writing-report-skill/"/>
        <content type="html">&lt;h2 id=&#34;나는-pt고자였다-경영학개론&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#나는-pt고자였다-경영학개론&#34;&gt;&lt;/a&gt; 나는 PT고자였다 - 경영학개론&lt;/h2&gt;
&lt;p&gt;대학교 1학년 첫 경영학개론 시간. 당연히 긴장 반 설렘 반으로 가득한 시간이었다. 자기소개를 마치고 학교 소개와 교과목 소개가 얼추 끝났을 때 교수님은 알아서 팀을 구성하라고 하셨다. 처음엔 다들 수줍어 하더니, 잠시 후 조금씩 모이고 팀을 구성해나갔다. 그 중에서도 가장 높은 수요를 받는 사람은 &#39;PT 잘만드는 사람’이었다. 스타트업에서 개발자의 수요와 연봉이 높듯, 대학교 수업시간에서 가장 수요와 관심을 받는 사람은 &#39;PT 잘만드는 사람’이었다. 이들을 영입하기 위해서 ‘자료조사 열외’, &#39;팀회의 열외’를 내건 사례들도 왕왕 있었다. 디자인만 잘해주면 된다는 마인드였기 때문이다.&lt;/p&gt;
&lt;p&gt;일반적으로 공대생들보다는 경영대생이, 경영대생보다는 디자인학과생이 PT를 잘 만드는 경향이 있어 수요가 높은 편이었는데, 나는 전혀 아니었다. 애들끼리 얘기할 때 용어로 &#39;PT고자’였다. 깔끔하면서도 예쁘게 만드는 다른 친구들과 달리, 마치 초등학생이 스케치를 한 듯, 졸라맨을 그린듯 ppt디자인에 자신이 없었다. 그런 이유인지 몰라도 ppt를 복잡하게 구성하는 걸 싫어하는 편이었고 지금도 그렇다.&lt;/p&gt;
&lt;p&gt;가이 가와사키의 &lt;a href=&#34;https://guykawasaki.com/the_102030_rule/&#34;&gt;10/20/30룰&lt;/a&gt; 을 좋아하게 된 건 그의 주장이 마음에 들어서이기도 하지만, 내가 가진 이런 약점 때문이기도 하다.&lt;/p&gt;
&lt;p&gt;자료조사와 논리 세우기 그리고 PT내용을 어떻게 구성할건지, 시간과 노동이 많이 들어가는 핵심파트를 다 맡아도 마지막 PT제작을 해줄 사람이 없으니 답답할 때가 많았다. 하지만 그런 약점을 개선하려는 노력을 별로 하지 않았다. 이유는 내 약점이기 때문에 쳐다보기 싫었던거 같다.&lt;/p&gt;
&lt;h2 id=&#34;약점과-마주해야-할-시간&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#약점과-마주해야-할-시간&#34;&gt;&lt;/a&gt; 약점과 마주해야 할 시간&lt;/h2&gt;
&lt;p&gt;어느 날, xx의 데이터 분석 미니 프로젝트를 맡을 일이 있었다. 어찌저찌 분석을 했고 보고서를 작성해서 제출했는데, 다시 해오라는 대답을 들었다. 내가 봐도 심했긴 했다. 차트도 삐뚤삐뚤. 뭔가 일관성 있어보이지 않고 이건 비즈니스 보고서는 커녕 대학교 1학년 과제 제출 수준보다도 못했으니까.&lt;/p&gt;
&lt;p&gt;그런데 그 때도 템플릿을 인터넷에서 구해서 어찌저찌 넘어가는 수준으로 모면했다. 약점과 마주해야 할 시간이었지만 굳이 마주하고 싶지 않았다. 하지만 분석가로 일하겠다면서 PT작성을 못한다는 건 말이 안되는 일이었고 시간은 흘러 다시한번 오더가 떨어졌다.&lt;/p&gt;
&lt;p&gt;‘진영님 ~~~ 정리해서 보고해주세요.’&lt;/p&gt;
&lt;p&gt;그 때 이 책을 잡았다. 시간이 좀 걸리더라도 제대로 한 번 공부해봐야겠다고 생각했기 때문이다.&lt;br /&gt;
&lt;img src=&#34;/2020/09/10/writing-report-skill/book_img.jpg&#34; alt=&#34;책 표지&#34; /&gt;&lt;/p&gt;
&lt;p&gt;다른 PT책도 많은데 이 책을 본 이유는 첫째로 복잡한 디자인을 단시간에 배우는 건 힘들다고 생각했고 둘째로 컨설턴트들이 깔끔하면서도 가장 비즈니스적인 PT를 만드는 능력이 있기에 그걸 배우고 싶었기 때문이다.&lt;/p&gt;
&lt;p&gt;내가 배우고 싶은 건 비즈니스 PT 제작 능력이지, 눈이 띠용할 만큼 아름다운 디자인을 PT에 넣는 능력이 아니기 때문이다.&lt;/p&gt;
&lt;p&gt;이 책은 이런 요구사항을 충족시켜준 책이다.&lt;/p&gt;
&lt;p&gt;어쩌면 가장 기초 중 기초라고 할 수 있는 메뉴들부터 하나하나 차근차근 설명한다. 너무 당연하다고 생각할 수 있는데 의외로 있는지도 모르는 기능들이 많았다. 그리고 컨설팅을 하시는 분들은 그런 기능을 자주 활용한다고 하셔서 노하우를 배울 수 있었다.&lt;/p&gt;
&lt;p&gt;색깔 하나, 글꼴 하나, 줄 간격 하나에도 보는 사람이 어떻게 인식할지 고민한 흔적들이 녹아있었다. 그저 결과물만 봤을 땐 몰랐던 이야기였다. 사실 한빛미디어 홈페이지에 가보면 저자가 만들어놓은 템플릿을 무료로 제공하기 때문에 결과물 Templates만 보고 싶다면 이런 건 별로 보지않아도 된다. 아니 책을 별로 보지 않아도 상관없다. 홈페이지에 가서 템플릿을 다운로드하기만 하면 되니까.&lt;/p&gt;
&lt;p&gt;내가 집중한 건 &#39;어떤 이유’로 &#39;어떤 생각’으로 PT를 만들어 나가는지, 어떤 기능을 활용하는지. 그 과정이었다. 결과만 보는 건 인터넷 템플릿 다운받는 것 이상의 의미가 없으니까.&lt;/p&gt;
&lt;p&gt;아래 사진을 보자&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2020/09/10/writing-report-skill/fast_execution_tool.jpg&#34; alt=&#34;빠른실행도구&#34; /&gt;&lt;/p&gt;
&lt;p&gt;파워포인트의 메뉴 화면인데, 비슷하면서도 뭔가 추가된 느낌을 받을 것이다. &#39;빠른실행도구’라는 기능인데, 이미 안 사람도 있겠지만, 나는 이런 기능이 있는지 전혀 알지 못했다.&lt;/p&gt;
&lt;p&gt;메뉴에 이미 다 기능이 있는데 ‘왜’ 굳이 귀찮게 또 추가를 해야하는지 물어볼 수도 있을거 같다. 반갑다 동지! 나도 처음엔 그런 의문을 품었다.&lt;/p&gt;
&lt;p&gt;이 기능을 사용하는 이유는 3가지 이유가 있다. 다음 사진을 보자.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2020/09/10/writing-report-skill/after_close_general_menu.jpg&#34; alt=&#34;일반메뉴 축소 후 빠른실행도구만 남겨놓은 화면&#34; /&gt;&lt;/p&gt;
&lt;p&gt;뭔가 달라졌음을 당연히 느꼈을 것이다. 우리가 보는 일반(리본)메뉴를 축소시킨 뒤 빠른실행도구만 남겨놓았다.&lt;/p&gt;
&lt;p&gt;여기서 첫 번째 이유가 나오는데, 저자같은 컨설턴트는 작은 노트북 화면에 의존해서 PT 슬라이드를 만드는 경우가 많다고 한다. 저자의 경험에 따르면 화면이 작을 경우 오타를 찾기 힘들거나, 디자인에서 결함이 있는 부분을 찾기 힘들기 때문에 최대한 화면을 넓게 사용해야 높은 품질의 슬라이드를 만들 수 있다고 한다. 지금 내가 작업하고 있는 환경은 듀얼 모니터를 사용해서 작업을 하기에 당장은 적용되지 않는 이유지만, 만약 나도 저자처럼 노트북 화면 하나에 의존할 때가 오면 활용할 수밖에 없다고 생각했다.&lt;/p&gt;
&lt;p&gt;둘째로 위 사진에 보면 파란색 동그라미 표시를 해놓은 ‘맨 앞으로 가져오기’, &#39;맨 뒤로 보내기’와 같은 기능은 PT슬라이드를 만들거나 수정할 때 자주 사용하는 기능이라 하나하나 찾는 수고를 덜어야 소요시간을 줄이고 업무효율성을 높일 수 있다. 슬라이드를 만들어본 사람이라면 알텐데, 단순한 디자인의 간단한 슬라이드 제작이라고 하더라도 결과물이 단순한 거지, 제작시간이 짧은 건 아니다. 특히 다른 사람에게 보여주고 평가받아야 하는 슬라이드의 특성상 텍스트 상자, 도형, 줄 간격 할 것없이 섬세하게 다듬어야 하기 때문에 효율성을 높이는 건 필수라고 생각한다.&lt;/p&gt;
&lt;p&gt;마지막으로 빠른실행도구에 들어갈 기능을 자기에 맞게 한번 설정한 뒤 설정파일을 저장해놓으면 다른 컴퓨터를 사용하더라도 설정파일을 불러와서 똑같은 빠른실행도구를 사용할 수 있다. 프로그래밍으로 치면 자기만의 라이브러리, 함수를 저장해놓는 것과 비슷하다.&lt;/p&gt;
&lt;p&gt;어떤가? 단순히 빠른실행도구라는 결과물만 보면 배울 점은 보이지 않던게 보이기 시작하지 않는가?&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;바퀴를 재발명하지 마라&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;유명한 프로그래밍 격언이다. 이 책의 장점 중 하나는 책에서 나온 템플릿(실습하지 않은 템플릿 포함)을 무료로 제공한다는 점이다. 프로그래밍에서 라이브러리를 import해서 사용하듯, 좋은 템플릿이 있다면 굳이 또다시 새로 만드는 시간 낭비할 이유는 없다. 공부한 걸 바탕으로 각 상황에 맞게 필요한 템플릿에서 복사 + 붙여넣기 하면 될 일이다.&lt;/p&gt;
&lt;p&gt;다만 이 책에선 몇 가지 단점이 있기 때문에 그 점에 유의해야 한다.&lt;/p&gt;
&lt;p&gt;비즈니스 보고서에서 가장 핵심적으로 다루는 누적막대그래프에 대한 실습 데이터를 모든 실습에 제공하지는 않는다. 또한, 실습에서 다루는 선그래프에 대해서도 템플릿을 제공하지 않는다. 이 점이 무척 아쉬웠다. 이럴 때 thinkcell이란 사용하면 PT에서 누적막대그래프를 그리거나 다른 시각화를 할 때 매우 편리한데, 이건 유료프로그램이라 보통 컨설팅을 하시는 분들 위주로 사용한다고 알고 있다. 차선책으로는 태블로나 Power BI 같은 BI툴을 활용해서 그래프를 작성한 뒤 슬라이드에 넣는 방법이 있을 것 같다.&lt;/p&gt;
&lt;p&gt;그리고 보고서 템플릿 제공파일을 살펴보니 다음 사진의 왼쪽 사진처럼 어떤 내용인지 설명을 넣지 않았다. 나중에 활용을 위해선 해당 템플릿이 어떤 템플릿인지 알아야 상황에 맞게 즉각적으로 사용할 수 있기 때문에 직접 일일이 다 이름을 수정해야했다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2020/09/10/writing-report-skill/unordered_ordered.jpg&#34; alt=&#34;보고서템플릿(수정전vs수정후)&#34; /&gt;&lt;/p&gt;
&lt;p&gt;조금 더 독자 지향적으로 자료를 제공했다면 어땠을까 하는 아쉬움이 있다. 그래도 이 책 덕에 데이터 분석을 한 뒤에 어떻게 커뮤니케이션 해야 하는지, 색채 하나, 명도 하나에도 사람들의 인식이 많이 바뀔 수 있음을 배웠다. 특히나 경험이 많은 시니어에게 과외를 받듯 배울 수 있어서 즐거운 독서였다. 데이터 분석을 하는 사람이든 아니면 일반 직장인이든 대학생이든 일독을 권하고 싶다.&lt;/p&gt;
</content>
        <category term="Jinyoung Song" />
        <category term="ppt" />
        <category term="발표" />
        <category term="consulting" />
        <category term="보고서" />
        <category term="파워포인트" />
        <category term="PT고자" />
        <category term="ppt고자" />
        <category term="ppt공포" />
        <category term="슬라이드" />
        <updated>2020-09-10T14:29:38.000Z</updated>
    </entry>
    <entry>
        <id>https://deepbaksu.github.io/2020/09/04/python-data-analysis-technique/</id>
        <title>제대로 된 실무서적 - 파이썬 데이터분석 실무 테크닉 100</title>
        <link rel="alternate" href="https://deepbaksu.github.io/2020/09/04/python-data-analysis-technique/"/>
        <content type="html">&lt;p&gt;&lt;img src=&#34;/2020/09/04/python-data-analysis-technique/python_da.PNG&#34; alt=&#34;책 표지&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;사전-공지-내돈내산&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#사전-공지-내돈내산&#34;&gt;&lt;/a&gt; 사전 공지 : 내돈내산&lt;/h2&gt;
&lt;p&gt;실력은 그리 좋지 못한데, 책 읽는 건(정확히 말하면 책을 사고 책장에 장식하는 건) 좋아하기에 출판사로부터 책 선물을 받기도 하고, 서평단 활동을 하기도 한다. 그렇지만 이 책은 분명 내가 돈을 내고 내가 직접 구매한 내돈내산 책이다. 그렇기에 책에 대해서 칭찬을 하든 비판을 하든 전혀 광고가 아님을 밝힌다.&lt;/p&gt;
&lt;h2 id=&#34;누구나-그럴듯한-계획이-있다-데이터-분석&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#누구나-그럴듯한-계획이-있다-데이터-분석&#34;&gt;&lt;/a&gt; 누구나 그럴듯한 계획이 있다 - 데이터 분석&lt;/h2&gt;
&lt;p&gt;타이슨이 강조한 말이다. 두들겨 맞기 전까진 다들 자기의 능력을 발휘해 데이터분석을 어떻게 어떻게 처리하고 인정을 받을거란 환상을 품는다. 나 또한 그랬다. 실무에 가기 전까진. 이 책을 만나기 전까진.&lt;/p&gt;
&lt;p&gt;데이터분석이라고 하면 보통 크롤링 하고 전처리 조금 한 뒤에 스케일링을 좀 해주고 머신러닝 라이브러리를 사용해서 회귀나 예측만 잘하면 되는거라고 생각하기 쉬운데 그렇지가 않다. 전처리란 것도 우리가 생각한 거 이상으로 다양한 종류가 있을 수 있고, 단순히 회귀나 분류, 예측을 해야 하는 게 아니라 소셜 네트워크 분석을 하거나 자연어처리를 해야 할 수도 있다.&lt;/p&gt;
&lt;p&gt;특히나 이 책에선 일반적인 데이터분석 서적에서 잘 다루지 않는 최적화와 시뮬레이션까지 다루고 있다. 일반적으로 데이터분석 커리큘럼에서 자신감을 얻고 뭔가 자만감까지 빠지고 있는 사람이라면 이 책을 통해 그 자만감을 없애고 다시 겸손해질 필요가 있다.&lt;/p&gt;
&lt;p&gt;책 앞부분은 일반적으로 많이 접해본 비즈니스 데이터 전처리 및 에측 분석인데다 저자가 하나하나 마치 꼭꼭 씹은뒤 먹여주기 때문에 &#39;너무 쉬운거 아니야?&#39;라고 착각할 수 있다. 하지만 물류 최적경로 파악을 위한 소셜 네트워크 분석, 물류 네트워크 최적화, 시뮬레이션을 통한 소비자 행동 예측 부분 (각각 6, 7, 8장)으로 가면 익숙하지도 않은데다 저자의 설명 또한 많이 빈약하므로 멘붕에 빠질 수 있다. (나만 그런가?)&lt;/p&gt;
&lt;h2 id=&#34;정량분석-그리고-감각&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#정량분석-그리고-감각&#34;&gt;&lt;/a&gt; 정량분석 그리고 ‘감각’&lt;/h2&gt;
&lt;p&gt;그럼에도 이 책이 좋은 책이라고 생각하는 건 tool설명에 약간 치우친 책들과 달리 &#39;감각’을 길러줄 수 있는 책이기 때문이다.&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;이번 케이스처럼 반년 정도의 데이터라면 별로 영향이 없겠지만, 과거 수년의 데이터에는 여러가지 비즈니스 모델이 포함되어 있을 수 있기 때문에 전체 데이터를 한 번에 분석하면 데이터의 시계열 변화를 잘못 파악하는 경우가 있습니다. 그런 경우에는 데이터 범위를 좁혀서 분석하는 것도 하나의 방법입니다.&lt;/p&gt;
&lt;p&gt;파이썬 데이터 분석 실무 테크닉 100 19p&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;end_date(회원 기간이 만료된 날짜)컬럼에 결측이 있는 이유는 탈퇴하지 않은 회원의 경우 탈퇴일이 없기 때문에, 컬럼에 NULL값을 넣었을 것이기 때문이라고 추측할 수 있습니다.&lt;/p&gt;
&lt;p&gt;파이썬 데이터 분석 실무 테크닉 100 64p&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;이미 어느정도 실무에서 굴러보신 분이라면 &#39;너무 당연한 소리아니냐’할 수 있겠지만, 시계열 분석만 공부하고 막 실무에 투입된 사람, 머신러닝 라이브러리를 통해 머신러닝이 무엇인지 어떻게 회귀와 분류 문제를 푸는지 방법만 이해한 사람에게는 이런 조언들이 단순한 Tool설명보다 더 좋은 영양제가 될거라 생각한다.&lt;/p&gt;
&lt;p&gt;정량적으로 데이터를 분석해야하는 분석가에게도 &#39;감각’이 중요한 이유를 생각하다보니 장자의 양생주편이 생각이 났다.&lt;/p&gt;
&lt;p&gt;포정이라는 사람이 문혜군(文惠君)을 위해 소를 잡았다. 그런데 그 포정의 칼을 움직이는 동작이 신기에 가까웠다. 이를 본 문혜군은 어떻게 그런 경지에 이를 수 있냐고 물었다.&lt;/p&gt;
&lt;p&gt;포정은 도(道)를 얘기하며 자신의 철학을 설명해주었는데 그 중 백미는 다음의 문장이다.&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;평범한 보통 소잡이는 달마다 칼을 바꾸는데, 이는 무리하게 뼈를 가르기 때문입니다. 그렇지만 제 칼은 19년이나 되어 수천 마리의 소를 잡았지만 칼날은 방금 숫돌에 간 것과 같습니다. 저 뼈마디에는 틈새가 있고 칼날에는 두께가 없습니다. 두께 없는 것을 틈새에 넣으니, 널찍하여 칼날을 움직이는 데도 여유가 있습니다.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;잘 모르는 분석가는 툴만 이해했기 때문에 데이터의 의미를 이해하지 못한 채 이리저리 쑤셔놓기만 하지만(== 지금 내 상태), 좋은 분석가는 툴은 물론 데이터의 의미와 프로세스와 설득방법 같이 프로젝트의 전반적인 흐름을 정확히 이해하기 때문에 힘을 빼더라도 더 좋은 분석을 해낸다고 생각을 했다.&lt;/p&gt;
&lt;p&gt;무튼 이제 막 데이터 분석 실무를 다루셔야 할 분이라면 실무 들어가기전에 한 번쯤 실습해보고 가시면 좋을듯 하다. 같이 멘붕에 빠지시면 더욱 좋을거고.&lt;/p&gt;
</content>
        <category term="Jinyoung Song" />
        <category term="데이터분석" />
        <category term="파이썬" />
        <category term="실무" />
        <category term="데이터분석 실무" />
        <category term="네트워크 분석" />
        <category term="최적화" />
        <category term="시뮬레이션" />
        <category term="자연어처리" />
        <category term="회귀" />
        <category term="예측 분석" />
        <updated>2020-09-04T06:14:42.000Z</updated>
    </entry>
    <entry>
        <id>https://deepbaksu.github.io/2020/08/30/first-apply-after-consider/</id>
        <title>선지원 후고민</title>
        <link rel="alternate" href="https://deepbaksu.github.io/2020/08/30/first-apply-after-consider/"/>
        <content type="html">&lt;h2 id=&#34;1-꿈과-실험&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#1-꿈과-실험&#34;&gt;&lt;/a&gt; 1. 꿈과 실험&lt;/h2&gt;
&lt;p&gt;주말에 편안히 쉬고 있는데, 유튜브에 추천 영상이 올라와서 클릭했습니다.&lt;/p&gt;
&lt;div class=&#34;video-container&#34;&gt;&lt;iframe src=&#34;https://www.youtube.com/embed/CYmyp77d1BU&#34; frameborder=&#34;0&#34; loading=&#34;lazy&#34; allowfullscreen&gt;&lt;/iframe&gt;&lt;/div&gt;
&lt;p&gt;타일러 라쉬의 영상이었죠. 제목에 &#39;동기부여’라는 말이 적혀 있기에 영상을 볼지 안볼지를 1분간 고민했습니다. 보통 ‘동기부여’ 강연이라고 하면 들을 땐 뭔가 고양되는 느낌을 받으면서도 영상이 끝나고 나선 별로 알맹이 없는 느낌을 받거든요. 그런 공허함을 느낄 바엔 차라리 보지 않는게 낫다고 생각이 들어서 동기부여 강의 시청은 자제하는 편입니다.&lt;/p&gt;
&lt;p&gt;그래도 한 번 보자고 생각이 들어 영상을 시청했습니다.&lt;/p&gt;
&lt;p&gt;역시 엄청 특별한 얘기는 아니었어요.&lt;/p&gt;
&lt;p&gt;&#39;꿈’이라는 단어에 대한 옹호를 하기 위해 열심히 준비했다는 건 느낄 수 있었던 강연이었습니다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2020/08/30/first-apply-after-consider/dream.jpg&#34; alt=&#34;꿈&#34; /&gt;&lt;/p&gt;
&lt;p&gt;언제부터인지는 모르겠지만 ‘열정’, ‘노력’, &#39;꿈’이라는 말만 듣더라도 ‘열정페이’, ‘노오오오오력’, &#39;착취’와 연결해서 생각하게 되고 밥벌이를 해야 하는 어른이 된 이후로는 &#39;꿈’이라는 단어를 생각하기보단 하루하루 버텨나가는 데 전력을 다하고 있거든요. 저만 그런가요? 하하.&lt;/p&gt;
&lt;p&gt;타일러가 말한 핵심 내용은 이렇습니다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;첫째, 작게 작게 실험하기.&lt;/li&gt;
&lt;li&gt;둘째, 꿈과 직함을 혼동하지 말기&lt;/li&gt;
&lt;li&gt;셋째, 다른 사람의 꿈을 물을 땐 그 사람이 꿈꾸는 세상을 물어보는 거란 걸 기억하기&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;다른 건 그리 와닿지 않았는데 여기서 주목한 내용은 첫번째 &#39;작게 작게 실험하기’부분 이었어요. 예전 경험이 떠올랐거든요.&lt;/p&gt;
&lt;h2 id=&#34;2-올인-그리고-실패&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#2-올인-그리고-실패&#34;&gt;&lt;/a&gt; 2. 올인 그리고 실패&lt;/h2&gt;
&lt;p&gt;예전에 썼던 &lt;a href=&#34;https://deepbaksu.github.io/2020/08/16/jonber/&#34;&gt;딥백수 그리고 존버&lt;/a&gt; 라는 글에서 비전공자에 코딩의 ㅋ자도 모른 채 IT쪽으로 전환을 했다고 말씀드린 적이 있어요.&lt;/p&gt;
&lt;p&gt;사실 여기서 조금 빠진 부분이 있는데, 제 처참한 실패 경험이에요.&lt;/p&gt;
&lt;p&gt;18년 10월 데이터 분석 인턴을 하고 있었는데, 제가 생각하던게 아니고 뭔가 채워지지 않는 느낌을 받고 있었어요. &#39;3년 후, 5년 후 미래를 봤을 때 과연 괜찮을까?&#39;라는 생각이 많이 들었고 뭔가 답답함을 느꼈죠. 인턴을 그만두고 국비교육을 수강하러 갔습니다. 그 때는 아무 개념도 없어서 제가 수강하는 과정이 어떤 과정인지, 어떤 걸 가르쳐주고 어떤 거에 중점을 두는 과정인지 어떤 것도 모른 채 그냥 직진했습니다. 지금 생각해보면 너무 생각없이 움직인 거였죠.&lt;/p&gt;
&lt;p&gt;국비교육은 기관이나 과정에 따라 다르지만, 보통 5개월에서 7개월 정도 수업을 진행합니다. 다시말해 1년의 반을 투자해서 자신의 커리어를 바꾸는 의사결정인거죠. 만약 교육과정과 선생님과 FIT이 맞다면 상관없겠지만, 그렇지 않을 경우 1년의 반을 그저 낭비한 게 될 수도 있으니까요. 사실 개발자 친구가 이런 점을 알고 옆에서 경고하고 조언을 해주는 등 얘기를 해주었지만, 그 당시 제겐 다른 대안도 없고 이미 도장을 찍어버린 상태였어요. 말그대로 올인을 했죠.&lt;/p&gt;
&lt;p&gt;저는 데이터분석을 위한 프로그래밍을 수강하길 원했는데 제가 수강한 과정은 빅데이터 플랫폼 개발 과정이었어요. 혹시나해서 상담직원에게 제가 원하는 바(데이터 분석 프로그래밍)를 말했는데 담당 직원은 그것도 배울 수 있다며 수강을 독려했었죠. (알고보니 상담직원은 코딩을 1도 모르는 사람이더군요)&lt;/p&gt;
&lt;p&gt;그렇게 시간이 흘러 수업날이 다가왔습니다.&lt;/p&gt;
&lt;p&gt;그리고 첫 수업날 첫 시간에 선생님께선 말씀하셨죠. “여긴 분석 수업 아닙니다!”&lt;/p&gt;
&lt;p&gt;이후 스토리는 예상이 가질 않으신가요? 맞아요. 처참히 무너졌죠. 자바-JSP-Spring으로 이어지는 웹 개발 교육과정에서 엄청난 벽을 맞이했거든요. 그 이후엔 이미 멘붕상태라 전혀 따라가질 못했습니다.&lt;/p&gt;
&lt;p&gt;엄청난 불안과 공포로 하루하루 잠자는 게 무서울 정도였어요. 왜냐하면 모든 자원과 시간을 다 쏟아부었는데 붕 뜬 느낌이었거든요. 매일같이 남들이 손가락짓 하는 상상이 들었어요. ‘그거 봐라. 내가 뭐랬냐. 너 그거 하지 말랬지’, ‘내가 너 그럴 줄 알았지’ 등등 이런 말들이 머릿속을 떠나질 않더라구요.&lt;/p&gt;
&lt;h2 id=&#34;3-실험의-실제-선지원-후고민&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#3-실험의-실제-선지원-후고민&#34;&gt;&lt;/a&gt; 3. 실험의 실제 - 선지원 후고민&lt;/h2&gt;
&lt;p&gt;당시 저는 딥백수에서 멘토링을 받고 있었는데, 멘토링 해주시는 분이 늘 강조한 게 있어요.&lt;/p&gt;
&lt;p&gt;바로 &#39;입사지원’이었어요.&lt;/p&gt;
&lt;p&gt;너무 당연하다구요? 맞아요. 당연하죠. 취업을 하려고 국비교육을 들었으니 취업을 해야 할테니까요. 그런데 실제로 기업들의 채용공고를 보다보면 그 벽이 정말 높아보였어요. 우대사항 말고 요구사항을 봐도 제겐 해당하는 사항이 없다고 생각이 들 정도였으니까요. 취준을 하시는 분이라면 아실텐데 요구사항에 자신이 해당하는 게 없다는 느낌만큼 좌절감을 주는 건 없을거에요.&lt;/p&gt;
&lt;p&gt;그러다보니 악순환의 반복에 빠지게 되었죠.&lt;/p&gt;
&lt;p&gt;좌절감 -&amp;gt; 불안감 -&amp;gt; 공부 안함 -&amp;gt; 요구사항에 맞는 게 없음 -&amp;gt; 좌절감 -&amp;gt; 불안감&lt;/p&gt;
&lt;p&gt;그동안 어르고 달래던 멘토분이 정말 지독하게 화를 낸 적이 있어요. 입사지원을 몇 개이상 하라고 했는데 겁이 난다고 하지 않았기 때문이었죠. 아마 계속 악순환에 빠지는 걸 막기 위해 엄청 화내셨던거 같아요.&lt;/p&gt;
&lt;p&gt;생각해보면 버튼 몇 개만 누르면 되는거고 누구에게 허락받고 지원해야 하는 것도 아닌데 자기만의 프레임에 빠져 계속 ‘나는 부족해’, ‘나는 공부를 더 해야해’, &#39;요구사항을 완전히 맞춰야해’라고 생각하고 있었죠.&lt;/p&gt;
&lt;p&gt;가끔 취준생분들과 얘기하다보면 제가 했던 이런 실수를 하시는 경우가 많습니다. 입사지원을 해보라고 하면 ‘아 제가 파이썬 쓴지 얼마 안되서요’, ‘아직 프로젝트 경험이 별로 없어서요’, ‘제가 과연 지원할 수 있을까요?’ 라고 말하는 경우를 많이 봅니다.&lt;/p&gt;
&lt;p&gt;그럴 때마다 멘토가 그랬고 지금은 제가 외치는 말 한 마디가 있죠. “선지원 후고민”&lt;/p&gt;
&lt;p&gt;굳이 너무 어렵게 생각할 필요 없이 실험을 해보는 겁니다. 지원을 해보고 서류통과는 몇 개가 나오는지, 1차 면접통과는 몇 개가 나오는지 실험을 한다는 태도로 생각을 줄이고 지원을 하면 자기가 부족한 게 뭔지 조금씩 보입니다.&lt;/p&gt;
&lt;p&gt;잠시 타일러의 강연으로 돌아가 볼까요?&lt;/p&gt;
&lt;p&gt;타일러는 강연에서 &#39;브라질에서 마이크로파이낸싱’을 해보고 싶다는 사람에게 &#39;오늘 집에 들어가기 전에 한국에서 포르투갈어 공부할 수 있는 곳 5곳 리스트업’이라는 힌트를 제공합니다. 꿈을 매우 작게작게 지원해보고 그 다음에 고민해보라는 의미였죠.&lt;/p&gt;
&lt;p&gt;이게 Apply Driven Study라는 겁니다.&lt;/p&gt;
&lt;p&gt;언젠가 금융권 회사에서 서류를 통과시켜줘서 면접을 보러간 적이 있었습니다. 기분좋게 아무 생각 없이 캐쥬얼하게 입고 갔었죠. 그런데 다들 정장을 빳빳하게 다려서 입고 들어왔고 탄탄한 포트폴리오가 있었고 어떤 활동을 했습니다. 당연히 면접관이 저에게 질문을 3분도 하지 않았죠.&lt;/p&gt;
&lt;p&gt;그 날 속상하고 힘들었지만 배웠습니다. “포트폴리오와 활동이 부족하구나.” 그런데 포트폴리오를 만들 시간이 별로 없네? 그럼 다른 사람이 쓴 책 따라하고 거기 나온 내용을 이야기 해봐야지.&lt;/p&gt;
&lt;p&gt;이런 식으로 지원 -&amp;gt; 부족점 파악 -&amp;gt; 지원, 이 사이클을 만들고 나니 불안감은 줄고 목표는 더 확실해지고 공부량은 늘더군요. 물론 매일같이 보이는 족족 입사지원을 했구요.&lt;/p&gt;
&lt;h2 id=&#34;4-혼자일-필요는-없다&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#4-혼자일-필요는-없다&#34;&gt;&lt;/a&gt; 4. 혼자일 필요는 없다&lt;/h2&gt;
&lt;p&gt;정말 똑똑하고 강한 사람이라면 혼자서 이런걸 다 해낼 수 있겠죠. 그리고 저처럼 시행착오를 겪지않고 빠르게 실험을 끝냈을겁니다.&lt;/p&gt;
&lt;p&gt;하지만 꼭 혼자 고민할 필요가 있나요? 꿈을 실험하는 목적은 자신이 원하는 목표를 이루기 위해서이지, 자신이 혼자서도 강하다는 걸 증명하기 위한 게 아니지 않을까요?&lt;/p&gt;
&lt;p&gt;사실 우리가 아무리 똑똑해도 내가 보지 못한 관점, 사실, 정보 등이 많습니다. 이건 초보건 고수건 관계없이 적용되는 말이라고 생각해요.&lt;/p&gt;
&lt;p&gt;특히나 자기가 부족하다고 생각하는 사람이라면 다른 사람에게 도움을 요청하는 건 정말 용기있는 행동이라고 생각하고 목표를 이루기 위해 노력하는 사람이라고 생각합니다.&lt;/p&gt;
&lt;p&gt;딥백수엔 이런 용기 있는 사람이 많아요.&lt;br /&gt;
그렇다고 그 분들이 실력이 부족하냐? 그건 아니구요. 서로에게 더 도움이 되기 위해 불철주야 노력하시는 분들이죠.&lt;/p&gt;
&lt;p&gt;(제가 제일 노력 안하는 편이라 많이 혼나요…하하)&lt;/p&gt;
&lt;p&gt;꿈이 있고 꿈을 이루기 위해 도움을 주고받고 싶으신 분이라면&lt;br /&gt;
&lt;a href=&#34;https://bit.ly/2Sqdnws&#34;&gt;https://bit.ly/2Sqdnws&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;여기로 함께해주세요.&lt;/p&gt;
&lt;p&gt;감사합니다.&lt;/p&gt;
</content>
        <category term="Jinyoung Song" />
        <category term="선지원" />
        <category term="후고민" />
        <category term="선지원 후고민" />
        <category term="실험" />
        <category term="Apply Driven Study" />
        <category term="생존" />
        <category term="멘토링" />
        <category term="용기" />
        <updated>2020-08-30T07:11:47.000Z</updated>
    </entry>
    <entry>
        <id>https://deepbaksu.github.io/2020/08/17/bitcoin-imperialism/</id>
        <title>Retro 대항해시대 - 비트코인 제국주의</title>
        <link rel="alternate" href="https://deepbaksu.github.io/2020/08/17/bitcoin-imperialism/"/>
        <content type="html">&lt;h2 id=&#34;제국과-전쟁&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#제국과-전쟁&#34;&gt;&lt;/a&gt; 제국과 전쟁&lt;/h2&gt;
&lt;p&gt;책 제목에 있는 &#39;제국주의’라는 단어를 보고 거부감이 들 수도 있을 것 같다. 하지만 시장에서 치열하게 경쟁하는 기업들의 분투를 &#39;전쟁’이라고 표현하고, 세계 패권국의 지위를 놓고 미국과 중국이 경쟁하는 걸 보며 &#39;무역전쟁’이라고 표현하는 걸 인정한다면, &#39;제국주의’라는 말은 현실을 적나라하게 표현했다는 의미로 이해할 수 있다.&lt;/p&gt;
&lt;p&gt;전쟁은 본래 누가하는 건가? 맞다. 영토를 넓히고 싶은 제국의 황제가 하는 일이다. &lt;strong&gt;이 책은 패권전쟁에 관한 이야기&lt;/strong&gt;다. 그 패권의 중심에 비트코인이 있다.&lt;/p&gt;
&lt;p&gt;의아할 수 있다. &lt;strong&gt;17년에 광풍이 일었던 그 비트코인?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;맞다. 그 비트코인이다. 그 비트코인을 둘러싸고 전 세계 시장에서 힘 깨나 쓴다는 야수들은 어떻게 자신의 영토를 늘리고 깃발을 꽂을지 다른 야수들을 어떻게 제압할지 전략을 짜고 있다. 다만 우리에게 보이지 않게 감추고 있을 뿐이다. 그리고 그 야수들에겐 목줄이 달려 있는데 거기엔 어느 나라 야수인지 적혀있다. 즉, 이건 단순히 기업들간의 경쟁이 아닌 국가간의 경쟁이라는 얘기다.&lt;/p&gt;
&lt;p&gt;이상하다.&lt;/p&gt;
&lt;p&gt;얼핏 유튜브에서 본 영상에서 블록체인은 &#39;탈중앙화’를 지향하고 중앙권력을 해체하고 사회를 더욱 투명하게 만든다고 한 것 같았는데, 중앙권력이 나서서 인프라를 깔고 경쟁을 하고 있다.&lt;/p&gt;
&lt;p&gt;말이 아닌 행동을 봐야 한다. 왜 그렇게 지원을 하고 경쟁을 할까? 사회를 더욱 투명하게 만들기 위해서? 좋은 세상을 만들기 위해?&lt;/p&gt;
&lt;p&gt;당연히 그럴일은 없다.&lt;br /&gt;
야수에게 피냄새가 나면 반응하듯, 기업에겐 돈냄새를 정부에겐 통제의 수단을 제공하기 때문에 반응할 뿐이다.&lt;/p&gt;
&lt;p&gt;무슨 말이냐고?&lt;/p&gt;
&lt;p&gt;이 책 83~84페이지를 보자.&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;강조하고 싶은 것은 비트코인 암호화 기술의 원천이 NSA라는 점이다. 비트코인의 SHA-256 해시 알고리즘은 NSA가 고안한 것이다. 최초의 인터넷이 미국이 만든 군사적 목적의 네트워크였듯이, 비트코인도 미국 정보기관의 암호화 기술에 그 뿌리를 두고 있다. 게다가 세간의 오해와는 달리 비트코인은 익명성이 거의 없을뿐더러 정보기관의 감시에 턱없이 취약하다. NSA의 내부 고발자 스노든은 비트코인의 지나친 투명성 신화에 대해 다음과 같이 말한 바 있다. “모든 사람들이 비트코인의 제한적인 거래 처리 능력에 집중하고 있는데 이는 비트코인의 주요한 결함이 맞다. 그러나 나는 비트코인의 훨씬 구조적이고 심각한 결함은 공개 장부라고 생각한다.”&lt;/p&gt;
&lt;p&gt;실제로 NSA는 일찍이 비트코인을 주목해왔다. 스노든이 유출한 기밀문서에 의하면, NSA는 2013년 이후 &#39;오크스타OAKSTAR’라는 코드명으로 비트코인 네트워크 참여자들을 감시했고 오크스타의 하위 프로그램인 &#39;몽키로켓MONKEYROCKET’은 네트워크 장비를 이용해 유럽, 중동, 아시아, 중남미에서 데이터를 수집했다. 즉, NSA는 비트코인으로 거래를 주고받는 사람들의 신원뿐 아니라 이들의 비밀번호 정보, 인터넷 활동, MAC 주소 등을 파악할 수 있는 것이다. 전 세계적으로 비트코인 관련 거래소를 통제하고 KYC/AML(Know Your Customer - 고객 신원 확인 /Anti Money Laundering - 자금 세탁 방지)을 강화하는 추세인데, 이렇게 되면 NSA는 전 세계 비트코인의 흐름을 추적하고 이와 연관된 사람들을 감시 및 통제할 수 있는 권한을 얻게 되는 셈이다.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;그토록 강조한 &#39;탈중앙화’의 이상은 어디로 갔을까? 이 책의 저자는 단언한다. 그런거 없다고. 하지만 이상점이 사라졌다 해서 외면할 순 없다. 아니 그래선 안된다.&lt;/p&gt;
&lt;h2 id=&#34;비트코인은-둥글다&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#비트코인은-둥글다&#34;&gt;&lt;/a&gt; 비트코인은 둥글다&lt;/h2&gt;
&lt;p&gt;지구는 평평한가 아니면 둥근가? 너무 바보같은 질문이라 여기겠지만 이 질문으로 인해 수많은 사람들이 살육을 당하고 역사는 새로운 흐름으로 전개되었다. 원주민들에게 총쏘고 깃발만 꽂으면 새로운 땅을 얻을 수 있다는 소문은 수많은 사람들 속에 내재된 야망을 자극했다. 당연히 그 소식은 지배층이 가장 먼저 접했다. 그리고 지배층은 당연히 깃발을 더 많이 꽂기 위해 선단을 꾸렸다.&lt;/p&gt;
&lt;p&gt;하지만 일반 사람들에겐 머나먼 얘기였다. 정보와 자본이 없었기 때문이다. 그들에겐 그저 떠도는 소문일 뿐 실제하지 않는 세상이었고 그들에게 지구는 계속 평평했다.&lt;/p&gt;
&lt;p&gt;인류는 이런 대항해시대를 거치며 지구에 있는 모든 곳을 알아보고 개발했다. 단순히 개발한 것 뿐만 아니라 인공위성을 날려 24시간 감시까지 진행했다. 그럼에도 인류에겐 계속해서 새로운 개척지가 필요했다. 그리고 이 새로운 개척지가 비트코인이다.&lt;/p&gt;
&lt;p&gt;선릉역에서 흔히 볼 수 있는 알트코인 사기꾼 업자도, 리브라를 만든다는 페이스북의 저커버그도, 이젠 없어선 안될 카카오톡의 카카오 그라운드X도 이 개척지에 깃발을 꽂으려 하고 있다.&lt;/p&gt;
&lt;p&gt;이 깃발꽂기의 경쟁자는 단지 여기에 머물지 않는다.&lt;/p&gt;
&lt;p&gt;공부를 할 때도, 데이트를 할 때도, 업무상 미팅을 할 때 커피를 열심히 대접해주던 스타벅스가 군침을 흘리고 있고, 맥북과 앱스토어로 익숙한 애플이 군침을 흘리고 있다. 마이크로소프트는? 구글은? 당연한걸 묻지 말자.&lt;/p&gt;
&lt;p&gt;한 마디로 정리해서 모두 군침을 흘리고 있다.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;지금 이 시대에 비트코인은 대항해시대다.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2020/08/17/bitcoin-imperialism/hanghae.jpg&#34; alt=&#34;대항해시대 - 출처 넷마블&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;제국의-관점으로-봐야-보인다&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#제국의-관점으로-봐야-보인다&#34;&gt;&lt;/a&gt; 제국의 관점으로 봐야 보인다&lt;/h2&gt;
&lt;blockquote&gt;&lt;p&gt;누군가를 비판하고 싶을 때는 이 점을 기억해두는 게 좋을 거다. 세상의 모든 사람이 다 너처럼 유리한 입장에 서 있지는 않다는 것을&lt;/p&gt;
&lt;footer&gt;&lt;strong&gt;스콧 피츠제럴드&lt;/strong&gt;&lt;cite&gt;위대한 개츠비&lt;/cite&gt;&lt;/footer&gt;&lt;/blockquote&gt;
&lt;p&gt;우리는 너무 당연하게 체크카드나 신용카드로 결제한다.&lt;/p&gt;
&lt;p&gt;2020년 3월 10일 한은이 발간한 보고서에 따르면 설문조사 응답자의 97.9%가 예금계좌를 보유하고 있고, 신용카드는 81.3%, 체크(직불)카드는 68.8%를 보유하고 있다고 한다. 이런 우리의 맥락으로만 보면 왜 비트코인이 대항해시대라고 할 수 있는지 공감할 수 없다.&lt;/p&gt;
&lt;p&gt;정말 제대로 보고 싶다면 제국의 시선으로 넓게 봐야 한다.&lt;/p&gt;
&lt;p&gt;책 173~174페이지를 보자.&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;전 세계 17억 명은 은행 계좌가 없고 이 중 약 67퍼센트는 모바일 기기를 사용한다. 은행 인프라가 낙후된 곳은 법정 화폐 가치 또한 불안정해서 비트코인의 인기가 높다. 따라서 중남미, 동남아, 아프리카는 스타벅스의 먹잇감이 되기 쉬운 상황이다. 실제로 스타벅스는 2018년 10월 아르헨티나 현지 은행 방코 갈리시아와 파트너십을 맺고 스타벅스 은행 지점을 오픈했다. 물론 비트코인 이야기는 쏙 빼고 고객의 경험, 편의 같은 이야기를 하면서 말이다. 아르헨티나는 베네수엘라와 더불어 비트코인의 인기가 높은 나라 중 하나다.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;제국의 시선은 한 지역에 머물지 않는다. 제국이 하는 행위를 세계경영이라고 하지 않나. 좁은 관점을 버리고 멀리 볼 필요가 있다. 그래야 생존전략이 보인다. 좋든 싫든 이들이 한 번 흐름을 만들고 표준을 만들면 그 표준을 따라야 한다. 특히 한번 표준이 설정되고 그 경로를 따라 발전하다보면 거기에 의존성이 생겨 다른 방향으로 바꾸기는 거의 불가능하다. 경제추격론에서 말하는 경로의존성이 있기 때문이다.&lt;/p&gt;
&lt;p&gt;만약 이런 제국의 관점과 생존전략이 궁금하다면 이 책을 읽기를 추천하고 싶다.&lt;/p&gt;
</content>
        <category term="Jinyoung Song" />
        <category term="비트코인" />
        <category term="제국주의" />
        <category term="미래전망" />
        <category term="플랫폼전략" />
        <category term="디지털자산" />
        <updated>2020-08-17T07:40:20.000Z</updated>
    </entry>
    <entry>
        <id>https://deepbaksu.github.io/2020/08/16/jonber/</id>
        <title>딥백수 그리고 존버</title>
        <link rel="alternate" href="https://deepbaksu.github.io/2020/08/16/jonber/"/>
        <content type="html">&lt;h2 id=&#34;첫-만남&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#첫-만남&#34;&gt;&lt;/a&gt; 첫 만남&lt;/h2&gt;
&lt;p&gt;딥백수와 함께한지 2년정도 된거 같네요.&lt;br /&gt;
2년전 서울에 올라와 고시원에 살며 어떻게 적응해야할지 잘 모를 때 딥백수를 처음으로 만나게 되었어요.&lt;/p&gt;
&lt;p&gt;사실 저는 딥백수와 어울리는 사람은 아니었어요.&lt;br /&gt;
딥러닝은 고사하고, 코딩의 ㅋ자도 모르고(지금도 그렇지만), 경영학을 전공한 문과 of 문과였거든요.&lt;br /&gt;
그런데 무슨 바람이 불었는지 딥백수 슬랙에 들어왔고 참여하고 싶다고 얘기를 했어요.&lt;/p&gt;
&lt;p&gt;그리고 진우님이 직접 커피한잔 사주시면서 딥백수의 철학(&lt;a href=&#34;https://www.slideshare.net/CurtPark1/agile-102881026&#34;&gt;https://www.slideshare.net/CurtPark1/agile-102881026&lt;/a&gt;) 에 대해서 설명해주셨죠.&lt;br /&gt;
당시엔 진우님이 갭이어(Gap-year)를 가지고 계시던 시기라 가능했던 즐거운 얘기였어요.&lt;/p&gt;
&lt;p&gt;그렇게 아무것도 모르던 문돌이가 엔지니어들과 함께 이야기하고 성장하면서 조금씩 개발에 관심을 갖게 되었어요.&lt;/p&gt;
&lt;h2 id=&#34;느슨하지만-끈끈한-관계&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#느슨하지만-끈끈한-관계&#34;&gt;&lt;/a&gt; 느슨하지만 끈끈한 관계&lt;/h2&gt;
&lt;p&gt;딥백수는 슬랙으로 소통하는 단체이기에 느슨한 관계라고 할 수 있어요.&lt;br /&gt;
하지만 힘들 때 할 수 있는만큼의 도움을 주고 받으며 관계를 쌓아나가다보니 느슨하지만 끈끈한 관계가 되더군요.&lt;/p&gt;
&lt;p&gt;사실 딥백수에 처음왔을 때 저는 어떤 직업을 선택할지 어떻게 해야할지 전혀 갈피조차도 못잡고 있던 시절이었어요. 그런 제게 딥백수 멤버들이 사준 식사와 커피 그리고 정보와 조언은 정말 큰 힘이 됐죠.&lt;/p&gt;
&lt;p&gt;생활코딩 페이스북을 보다보면 하루에 1번은 빠지지 않고 올라오는 질문 중 하나가&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;“비전공자인데 어떻게 해야 개발자가 될 수 있을까요?”&lt;br /&gt;
“비전공자인데 어떻게 해야 분석가가 될 수 있을까요?”&lt;br /&gt;
“비전공자인데 어떤 커리큘럼/책으로 공부해야 할까요?”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;와 같은 방향설정 질문이에요.&lt;/p&gt;
&lt;p&gt;방향설정 질문에 대한 답은 한 번으로 끝날 수가 없어요. 하다보면 또 방황하거든요.&lt;br /&gt;
꾸준한 관찰과 피드백이 필요한데 딥백수에선 그 점에서 꾸준히 관계를 맺으며 피드백을 받을 수 있었죠.&lt;/p&gt;
&lt;p&gt;지금 생각해보면 정말 큰 행운이었다고 생각해요.&lt;br /&gt;
그리고 이젠 저도 조금씩 나눔을 하고 있어요. 그렇게 딥백수 멤버들도, 저도 모두 관계속에서 성장해 나가고 있어요.&lt;/p&gt;
&lt;h2 id=&#34;존버-그리고-딥백수&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#존버-그리고-딥백수&#34;&gt;&lt;/a&gt; 존버 그리고 딥백수&lt;/h2&gt;
&lt;p&gt;존버가 답이라는 건 이미 워렌 버핏까지 말을 할 정도인 명제죠 (농담).&lt;br /&gt;
&lt;img src=&#34;/2020/08/16/jonber/jonber.jpeg&#34; alt=&#34;Jonber Picture&#34; /&gt;&lt;/p&gt;
&lt;p&gt;하지만 인간은 그리 강한 존재가 아니라고 저는 생각해요.&lt;br /&gt;
사람에 따라 어느정도 차이가 있겠지만 아무리 강인한 사람이더라도 혼자서 모든 걸 짊어질 순 없다고 생각하거든요.&lt;/p&gt;
&lt;p&gt;존버하더라도 더 나은 방향, 좀 더 효과적인 존버를 하기 위해선 연결망이 필요하고 딥백수는 충분히 그 역할을 해내고 있다고 생각해요.&lt;/p&gt;
&lt;p&gt;결국 힘든 사람들끼리 ‘함께’ 존버하는 것.&lt;br /&gt;
그게 딥백수에 있는 멤버들의 목표가 아닐까 생각합니다.&lt;/p&gt;
&lt;p&gt;이런 딥백수에 함께 하고 싶은 분은&lt;br /&gt;
&lt;a href=&#34;https://bit.ly/2Sqdnws&#34;&gt;https://bit.ly/2Sqdnws&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;이 곳으로 함께 해주세요.&lt;br /&gt;
감사합니다.&lt;/p&gt;
</content>
        <category term="Jinyoung Song" />
        <category term="존버" />
        <category term="jonber" />
        <category term="딥백수" />
        <category term="회고" />
        <updated>2020-08-16T07:06:38.000Z</updated>
    </entry>
</feed>
