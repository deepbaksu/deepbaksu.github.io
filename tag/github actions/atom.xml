<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://deepbaksu.github.io</id>
    <title>딥백수 • Posts by &#34;github actions&#34; tag</title>
    <link href="https://deepbaksu.github.io" />
    <updated>2020-09-06T11:23:04.000Z</updated>
    <category term="Mo Kweon" />
    <category term="go" />
    <category term="golang" />
    <category term="dependency injection" />
    <category term="wire" />
    <category term="uber-go" />
    <category term="fx" />
    <category term="Hyunggi Chang" />
    <category term="AI" />
    <category term="딥러닝" />
    <category term="로보틱스" />
    <category term="YouTube" />
    <category term="News" />
    <category term="Hyunseok Jeong" />
    <category term="Software Architecture" />
    <category term="Agile" />
    <category term="Architect" />
    <category term="Jinyoung Song" />
    <category term="데이터분석" />
    <category term="통계분석" />
    <category term="통계학" />
    <category term="통계역사" />
    <category term="비트코인" />
    <category term="제국주의" />
    <category term="미래전망" />
    <category term="플랫폼전략" />
    <category term="디지털자산" />
    <category term="microservice" />
    <category term="CQRS" />
    <category term="architecture" />
    <category term="software engineering" />
    <category term="선지원" />
    <category term="후고민" />
    <category term="선지원 후고민" />
    <category term="실험" />
    <category term="Apply Driven Study" />
    <category term="생존" />
    <category term="멘토링" />
    <category term="용기" />
    <category term="free web server" />
    <category term="heroku" />
    <category term="aws" />
    <category term="gcp" />
    <category term="netlify" />
    <category term="github actions" />
    <category term="구글애널리틱스" />
    <category term="GA" />
    <category term="Google Analytics" />
    <category term="Data Analysis" />
    <category term="Web Log Analysis" />
    <category term="Happy working" />
    <category term="Mindfulness" />
    <category term="Noble Eightfold Path" />
    <category term="gRPC" />
    <category term="Go" />
    <category term="REST" />
    <category term="존버" />
    <category term="jonber" />
    <category term="딥백수" />
    <category term="회고" />
    <category term="bluehole" />
    <category term="krafton" />
    <category term="communication" />
    <category term="GitHub CLI" />
    <category term="Gist" />
    <category term="Leaning by Doing" />
    <category term="Repo" />
    <category term="Alias" />
    <category term="습관" />
    <category term="중용" />
    <category term="꾸준함" />
    <category term="성실" />
    <category term="대화" />
    <category term="비폭력대화" />
    <category term="Golang" />
    <category term="Slice" />
    <category term="example" />
    <category term="Windows" />
    <category term="PowerShell" />
    <category term="PowerShell script" />
    <category term="Git" />
    <category term="Prompt" />
    <category term="Martin Fowler" />
    <category term="Refactoring" />
    <category term="Principles" />
    <category term="파이썬" />
    <category term="실무" />
    <category term="데이터분석 실무" />
    <category term="네트워크 분석" />
    <category term="최적화" />
    <category term="시뮬레이션" />
    <category term="자연어처리" />
    <category term="회귀" />
    <category term="예측 분석" />
    <category term="semantic release" />
    <category term="semantic version" />
    <category term="slack" />
    <category term="bot" />
    <category term="oauth" />
    <category term="Github Action" />
    <category term="Slack" />
    <category term="Automation" />
    <category term="자동화" />
    <category term="cron" />
    <category term="Seunghwan Chang" />
    <category term="English" />
    <category term="would" />
    <category term="ppt" />
    <category term="발표" />
    <category term="consulting" />
    <category term="보고서" />
    <category term="파워포인트" />
    <category term="PT고자" />
    <category term="ppt고자" />
    <category term="ppt공포" />
    <category term="슬라이드" />
    <category term="Martin Hwang" />
    <category term="Ray" />
    <category term="distributed computing" />
    <category term="parallel computing" />
    <entry>
        <id>https://deepbaksu.github.io/2020/09/06/free-web-server-for-your-portfolio/</id>
        <title>무료로 개인 프로젝트 호스팅 하기</title>
        <link rel="alternate" href="https://deepbaksu.github.io/2020/09/06/free-web-server-for-your-portfolio/"/>
        <content type="html">&lt;p&gt;&lt;img src=&#34;/2020/09/06/free-web-server-for-your-portfolio/heroku_projects.jpg&#34; alt=&#34;Heroku 에서 무로료 호스팅 중인 프로젝트들&#34; /&gt;&lt;/p&gt;
&lt;p&gt;많은 기업에서 채용을 위한 조건으로 포트폴리오를 내걸고 있습니다. 그래서 보통 열심히 코딩을 하며 개인 프로젝트를 수행합니다. 그런데 포트폴리오 소스코드를 만들었다 해도, 다른 분들에게 보여줄 수 없다면 큰 의미가 없을겁니다. 그래서 호스팅을 해야 하는데, 서버가 24시간 돌아가야하는 호스팅의 특성상 무료가 아닌 경우가 많습니다.&lt;/p&gt;
&lt;p&gt;개인프로젝트들을 무료로 호스팅할 수 있는 방법들을 무엇이 있을까요? 예를 들어 24시간 상주해있어야 되는 봇도 무료로 배포할 수 있습니다. 예를 들어 저희 딥백수 커뮤니티에서는 여러 봇들이 상주하고 있는데 소수를 제외하면 전부 무료로 운영하고 있습니다. 또한, 개인 프로젝트들 또한 무료로 전부 데모를 호스팅하거나 공식문서를 무료로 호스팅하고 있습니다.&lt;/p&gt;
&lt;p&gt;이 글에서 프로젝트들은 다음과 같이 분류하고 있습니다.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;CSS, HTML, JS 로만 이루어진 프론트엔드&lt;/li&gt;
&lt;li&gt;일정한 스케쥴에 따라 작동하는 크론잡&lt;/li&gt;
&lt;li&gt;백엔드 서비스가 필요한 경우&lt;/li&gt;
&lt;li&gt;데이터 저장이 필요한 경우&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;한가지 범위에만 속하지 않을 수 도 있습니다. 예를 들어 백엔드 서비스가 필요하면서 데이터 저장이 필요한 경우는 꽤 자주 있는 경우입니다. 또한 당연히 프로젝트가 어느정도 규모로 커지게 되면 무료로는 한계가 있습니다.&lt;/p&gt;
&lt;h2 id=&#34;프론트엔드&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#프론트엔드&#34;&gt;&lt;/a&gt; 프론트엔드&lt;/h2&gt;
&lt;p&gt;배포하고자 하는 프로젝트가 전부 스태틱 파일이라면 이런 경우에 속합니다. 이런 경우 &lt;a href=&#34;https://pages.github.com/&#34;&gt;GitHub Pages&lt;/a&gt; 를 통해서 배포해주는게 제일 간편합니다. 예를 들어 현재 이 블로그는 &lt;a href=&#34;https://github.com/deepbaksu/deepbaksu.github.io/tree/master&#34;&gt;https://github.com/deepbaksu/deepbaksu.github.io/tree/master&lt;/a&gt; 에서 GitHub pages 로 호스팅 되고 있습니다.&lt;/p&gt;
&lt;p&gt;예를 들어 오픈소스로 라이브러리를 만든다면 라이브러리에 대한 문서를 GitHub Pages 를 통해 배포하는 것이 일반적입니다.&lt;/p&gt;
&lt;p&gt;혹은 &lt;a href=&#34;https://www.netlify.com/&#34;&gt;Netlify&lt;/a&gt; 를 이용하는 방법도 있습니다. 하지만 Netlify 는 단순히 스태틱 파일을 호스팅하는 용도로는 Overkill 에 가깝습니다. Bandwidth 제한도 존재하구요.&lt;/p&gt;
&lt;p&gt;어떤걸 사용하던지 GitHub Actions 같은 CI 도구를 이용해 자동으로 배포가 되도록 하면 항상 최신 버전의 데모를 보여줄 수 있습니다.&lt;/p&gt;
&lt;h2 id=&#34;일정한-스케쥴에-따라-작동하는-크론잡&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#일정한-스케쥴에-따라-작동하는-크론잡&#34;&gt;&lt;/a&gt; 일정한 스케쥴에 따라 작동하는 크론잡&lt;/h2&gt;
&lt;p&gt;딥백수에서는 매 1시간마다 슬랙 내용을 엘라스틱서치로 백업하는 봇이 상주하고 있습니다. 이런 식으로 매일 1시에 이메일을 보내야 한다던지 혹은 메시지를 보내야 하는 경우 &lt;a href=&#34;https://docs.github.com/en/actions&#34;&gt;GitHub Action&lt;/a&gt; 을 이용하면 가능합니다.&lt;/p&gt;
&lt;p&gt;아래 예시는 딥백수 슬랙 메시지를 백업하는 스케쥴 작업으로 마지막으로 백업한 메시지의 timestamp.txt 를 깃헙리포에 저장해놓고&lt;br /&gt;
다음번 작업에서 그 시간부터 현재시간까지의 메시지를 슬랙으로부터 가져와 엘라스틱서치로 보내는 예시입니다.&lt;/p&gt;
&lt;figure class=&#34;highlight yaml&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;attr&#34;&gt;name:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;Fetch&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;slack&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;messages&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;and&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;push.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;attr&#34;&gt;on:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;schedule:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;# every hour.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;bullet&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;cron:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;0 * * * *&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;repository_dispatch:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;types:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;manual-trigger&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# A workflow run is made up of one or more jobs that can run sequentially or in parallel&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;attr&#34;&gt;jobs:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;comment&#34;&gt;# This workflow contains a single job called &amp;quot;build&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;build:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;# The type of runner that the job will run on&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;runs-on:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;ubuntu-latest&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;# Steps represent a sequence of tasks that will be executed as part of the job&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;steps:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;comment&#34;&gt;# Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;bullet&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;uses:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;actions/checkout@v2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;bullet&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;name:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;Prepare&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;credentials.json&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;attr&#34;&gt;env:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &lt;span class=&#34;attr&#34;&gt;PASSPHRASE:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;$&amp;#123;&amp;#123;&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;secrets.GPG_PASSPHRASE&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#125;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;attr&#34;&gt;run:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;|&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;          gpg --quiet --batch --yes --decrypt --passphrase=$PASSPHRASE --output credentials.json credentials.json.gpg&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&lt;/span&gt;      &lt;span class=&#34;bullet&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;name:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;Prepare&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;token.json&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;attr&#34;&gt;env:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &lt;span class=&#34;attr&#34;&gt;PASSPHRASE:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;$&amp;#123;&amp;#123;&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;secrets.GPG_PASSPHRASE&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#125;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;attr&#34;&gt;run:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;|&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;          gpg --quiet --batch --yes --decrypt --passphrase=$PASSPHRASE --output token.json token.json.gpg&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&lt;/span&gt;      &lt;span class=&#34;bullet&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;name:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;Run&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;the&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;docker&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;script&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;attr&#34;&gt;env:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &lt;span class=&#34;attr&#34;&gt;SLACK_TOKEN:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;$&amp;#123;&amp;#123;&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;secrets.SLACK_TOKEN&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#125;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &lt;span class=&#34;attr&#34;&gt;SHEET_ID:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;$&amp;#123;&amp;#123;&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;secrets.SHEET_ID&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#125;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &lt;span class=&#34;attr&#34;&gt;LB_IP:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;$&amp;#123;&amp;#123;&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;secrets.LB_IP&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#125;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &lt;span class=&#34;attr&#34;&gt;ES_USERNAME:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;$&amp;#123;&amp;#123;&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;secrets.ES_USERNAME&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#125;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &lt;span class=&#34;attr&#34;&gt;ES_PASSWORD:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;$&amp;#123;&amp;#123;&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;secrets.ES_PASSWORD&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#125;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;attr&#34;&gt;run:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;make&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;run_prod&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;put_data&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;bullet&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;name:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;Commit&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;last_timestamp.txt&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;attr&#34;&gt;run:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;|&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;          git config --global user.name &amp;#x27;GitHub Action&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;          git config --global user.email &amp;#x27;kkweon@gmail.com&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;          git commit -am &amp;#x27;Update last_timestamp.txt&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;          git push&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;백엔드-서비스가-필요한-경우&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#백엔드-서비스가-필요한-경우&#34;&gt;&lt;/a&gt; 백엔드 서비스가 필요한 경우&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;/2020/08/17/slack-bot/timebot_demo.png&#34; alt=&#34;미국/한국 시간을 변환해주는 서비스&#34; /&gt;&lt;/p&gt;
&lt;p&gt;저희 딥백수에서는 한국 시간이 메시지로 올라오면 자동으로 미국 시간으로 변환해주는 봇이 존재합니다. 이런 경우 서버에서 메시지를 받을 수 있어야 하기 때문에 앞에 나온 방법으로는 불가능합니다.&lt;/p&gt;
&lt;p&gt;AWS와 구글클라우드의 무료티어도 방법이지만 매우 간편한 &lt;a href=&#34;https://en.wikipedia.org/wiki/Platform_as_a_service&#34;&gt;PaaS&lt;/a&gt; 인 &lt;a href=&#34;https://www.heroku.com/&#34;&gt;Heroku&lt;/a&gt; 를 추천합니다. Docker도 지원하고 GitHub 에서 자동으로 배포되도록 연동도 쉽게 가능합니다.&lt;/p&gt;
&lt;p&gt;또 주로 사용하는 다른 방법은 AWS Lambda 를 사용하는 방법도 있습니다. 어느정도 관대한 정책 덕분에 또 트래픽이 많지 않은 개인 프로젝트 같은 경우 서버리스가 최적이라고 할 수 있습니다. 대신 단점은 서버리스 프레임워크/라이브러리를 사용해야 된다는 점이 있으나 큰 문제는 아닙니다.&lt;/p&gt;
&lt;h2 id=&#34;데이터-저장이-필요한-경우&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#데이터-저장이-필요한-경우&#34;&gt;&lt;/a&gt; 데이터 저장이 필요한 경우&lt;/h2&gt;
&lt;p&gt;서비스보다는 말그대로 데이터베이스만 필요한 경우, 3가지 정도로 나눠서 작업하고 있습니다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;위에서 나온 가장 마지막 메시지의 시간을 저장하는 등의 어플리케이션 상태를 저장하는 경우&lt;/li&gt;
&lt;li&gt;데이터베이스가 필요하다기보다 그냥 기록으로 저장해두는 공간이 필요한 경우&lt;/li&gt;
&lt;li&gt;데이터베이스가 필요한 경우&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;어플리케이션-상태를-저장하는-경우&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#어플리케이션-상태를-저장하는-경우&#34;&gt;&lt;/a&gt; 어플리케이션 상태를 저장하는 경우&lt;/h3&gt;
&lt;p&gt;저희는 이런 경우 GitHub Repo 에 체크인하는 식으로 코드를 사용합니다. 말그대로 커밋하고 푸시하는 식으로 작성합니다. 특히 상태가 있는 크론잡의 경우 GitHub Action 을 통해 매우 자주 사용되는 경우입니다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2020/09/06/free-web-server-for-your-portfolio/application_state_in_repo.jpg&#34; alt=&#34;Application 상태를 GitHub Repo 에 저장해두는 경우&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;단순하기-기록을-저장할-필요가-있는-경우&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#단순하기-기록을-저장할-필요가-있는-경우&#34;&gt;&lt;/a&gt; 단순하기 기록을 저장할 필요가 있는 경우&lt;/h3&gt;
&lt;p&gt;예를 들어 메시지를 단순히 저장하고 싶은 경우 구글 스프레드시트 API 를 사용해 구글 스프레드시트를 일종의 데이터베이스로 사용할 수 있습니다. 뜨 구글 스프레드시트 앱 내부에서 크론잡 또한 가능함으로 모니터링 시스템을 구축할 수 도 있습니다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2020/09/06/free-web-server-for-your-portfolio/spreadsheet_as_database.jpg&#34; alt=&#34;구글 스프레드시트를 통해 슬랙 메시지를 백업&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;데이터베이스가-필요한-경우&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#데이터베이스가-필요한-경우&#34;&gt;&lt;/a&gt; 데이터베이스가 필요한 경우&lt;/h3&gt;
&lt;p&gt;만약 데이터베이스가 필요하다면 2가지 방법을 사용하고 있습니다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;파이어베이스를 사용하거나&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://elements.heroku.com/addons&#34;&gt;Heroku Add-ons&lt;/a&gt; 을 사용하거나&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.mongodb.com/cloud/atlas&#34;&gt;MongoDB Atlas&lt;/a&gt; 를 사용합니다.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;파이어베이스는 쉽고 간편한 대신 벤더락인(Vendor Lock-In)&lt;sup class=&#34;footnote-ref&#34;&gt;&lt;a href=&#34;#fn1&#34; id=&#34;fnref1&#34;&gt;[1]&lt;/a&gt;&lt;/sup&gt; 이 된다는 단점이 있습니다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2020/09/06/free-web-server-for-your-portfolio/firebase_pricing.jpg&#34; alt=&#34;Firebase 가격 정보&#34; /&gt;&lt;/p&gt;
&lt;p&gt;두번째는 Heroku Add-ons 을 사용하는 방법입니다. Redis, Postgres, MySQL 등등 필요한 서비스를 찾을 수 있습니다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2020/09/06/free-web-server-for-your-portfolio/heroku_addons.jpg&#34; alt=&#34;Heroku Addons. Redis, Postgres, MySQL 등을 찾을 수 있다&#34; /&gt;&lt;/p&gt;
&lt;p&gt;세번째는 MongoDB Atlas 도 원래 mLab 을 통해서 Heroku Addons에서 존재했었는데 Heroku Addons 으로서 결별하여 지금은 MongoDB Atlas 플랫폼을 통해서 사용해야 됩니다. 대신에 512MB 까지 무료로 사용 가능하고 관대한 편이라 거의 자주 사용하고 있습니다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2020/09/06/free-web-server-for-your-portfolio/mongodb_atlas_pricing.jpg&#34; alt=&#34;MongoDB Atlas 가격&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;마무리&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#마무리&#34;&gt;&lt;/a&gt; 마무리&lt;/h2&gt;
&lt;p&gt;무료 서비스 이외에도 사용가능한 방법으로는 라즈베리파이를 이용하는 방법도 있습니다. 라즈베리파이4는 메모리가 8GB 까지 존재하며 아이피주소는 공유기에 존재하는 &lt;a href=&#34;https://en.wikipedia.org/wiki/Dynamic_DNS&#34;&gt;Dynamic DNS&lt;/a&gt; 를 사용하면 됩니다. 실제로 저는 라즈베리파이에 k3s 을 이용해 쿠버네티스를 이용한 서비스들도 사용하고 있습니다. 좀더 스케일이 필요한 경우에는 저렴한 Digital Ocean 을 주로 사용합니다.&lt;/p&gt;
&lt;p&gt;더 자세히 알고 싶으신 분은 &lt;a href=&#34;https://bit.ly/2Sqdnws&#34;&gt;딥백수 슬랙&lt;/a&gt; 에서 뵈요 😄&lt;/p&gt;
&lt;hr class=&#34;footnotes-sep&#34; /&gt;
&lt;section class=&#34;footnotes&#34;&gt;
&lt;ol class=&#34;footnotes-list&#34;&gt;
&lt;li id=&#34;fn1&#34; class=&#34;footnote-item&#34;&gt;&lt;p&gt;벤더락인이란 특정 플랫폼 벤더에 종속성이 생기는 현상입니다. &lt;a href=&#34;#fnref1&#34; class=&#34;footnote-backref&#34;&gt;↩︎&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;
</content>
        <category term="Mo Kweon" />
        <category term="free web server" />
        <category term="heroku" />
        <category term="aws" />
        <category term="gcp" />
        <category term="netlify" />
        <category term="github actions" />
        <updated>2020-09-06T11:23:04.000Z</updated>
    </entry>
</feed>
