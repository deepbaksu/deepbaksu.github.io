{
    "version": "https://jsonfeed.org/version/1",
    "title": "딥백수 • All posts by \"bot\" tag",
    "description": "우리는 '지속가능한 백수질'을 지향합니다. 고로 외롭게 공부하고 있을 당신을 응원합니다. 딥러닝에 관련된 글 뿐만 아니라, 백수생활의 넋두리도 환영합니다.",
    "home_page_url": "https://deepbaksu.github.io",
    "items": [
        {
            "id": "https://deepbaksu.github.io/2020/08/17/slack-bot/",
            "url": "https://deepbaksu.github.io/2020/08/17/slack-bot/",
            "title": "슬랙봇 Distribute 가능하게 만들기 (OAuth)",
            "date_published": "2020-08-17T08:32:54.000Z",
            "content_html": "<p>딥백수에는 여러 슬랙봇들이 상주하고 있습니다.</p>\n<p><img src=\"/2020/08/17/slack-bot/timebot_demo.png\" alt=\"캘리포니아/한국 시간 변환해주는 timebot\" /></p>\n<p>이렇게 만들어 둔 봇이 유용해서 다른 슬랙 workspace 에서 사용하고 싶을 때가 있습니다. 그러기 위해 distribute 가능하게 봇을 작성해야 합니다. 그러기 위해 OAuth를 사용해야 합니다.</p>\n<h2 id=\"oauth-란\"><a class=\"markdownIt-Anchor\" href=\"#oauth-란\"></a> OAuth 란?</h2>\n<p>OAuth는 엑세스를 관리하는 방법중에 표준으로 사용되는 방법입니다. A라는 애플리케이션에서 B사이트의 유저 정보가 필요하다면 B사이트로 OAuth Request 를 보내는 방식입니다.</p>\n<p>여기서 슬랙봇이 A 애플리케이션이고 슬랙이 B에 해당합니다.</p>\n<h2 id=\"실제-slack-작동-구조\"><a class=\"markdownIt-Anchor\" href=\"#실제-slack-작동-구조\"></a> 실제 Slack 작동 구조</h2>\n<p><img src=\"https://a.slack-edge.com/fbd3c/img/api/articles/oauth_scopes_tutorial/slack_oauth_flow_diagram.png\" alt=\"OAuth\" /></p>\n<p>위 그림에서 구현해야 될게 많은 것으로 보이지만 실제로 <code>GET /api/oauth?code=XXXXX</code> 엔드포인트를 서버에 만들어주고 토큰을 저장할 데이터베이스만 있으면 완성입니다.</p>\n<p>예를 들어, 유저가 <a href=\"https://slack.com/oauth/v2/authorize?client_id=288745980535.515443770183&scope=channels:history,channels:join,channels:read,chat:write,chat:write.customize,chat:write.public,commands,dnd:read,emoji:read,groups:history,groups:read,groups:write,im:history,im:read,im:write,links:read,links:write,mpim:history,mpim:read,mpim:write,pins:read,pins:write,reactions:read,reactions:write,reminders:read,reminders:write,remote_files:read,remote_files:share,remote_files:write,team:read,usergroups:read,usergroups:write,users.profile:read,users:read,users:read.email,users:write,app_mentions:read&user_scope=\"><img alt=\"Add to Slack\" height=\"40\" width=\"139\" src=\"https://platform.slack-edge.com/img/add_to_slack.png\" srcSet=\"https://platform.slack-edge.com/img/add_to_slack.png 1x, https://platform.slack-edge.com/img/add_to_slack@2x.png 2x\" /></a> 이 버튼을 누르고 동의를 하게 되면 timebot 서버로 GET /api/oauth?code=XXXX 리퀘스트를 보내게 됩니다. (step 2 에 해당)</p>\n<p>그럼 이 code=XXX 를 사용하여 슬랙 서버에 OAuth 요청을 보내고(step 3) 받은 토큰을 데이터베이스에 저장해주면 됩니다 (step 4).</p>\n<p>수도 코드는 아래와 같이 되어 있습니다.</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">OauthHandler</span><span class=\"params\">(writer http.ResponseWriter, request *http.Request)</span></span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">// GET ?code=XXXX 읽음</span></span><br><span class=\"line\">  code, ok := request.URL.Query()[<span class=\"string\">&quot;code&quot;</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// CODE를 보냄 (POST https://api.slack.com/methods/oauth.v2.access)</span></span><br><span class=\"line\">  resp, err := getOAuthV2Response(slackClientId, slackClientSecret, code[<span class=\"number\">0</span>], <span class=\"string\">&quot;&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// TeamID 및 AccessToken 저장</span></span><br><span class=\"line\">  store(resp.TeamID, resp.AccessToken)</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// ... send ok response</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><code>POST https://api.slack.com/methods/oauth.v2.access</code> 의 예시 response</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">&quot;ok&quot;</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">  <span class=\"attr\">&quot;access_token&quot;</span>: <span class=\"string\">&quot;xoxb-17653672481-19874698323-pdFZKVeTuE8sk7oOcBrzbqgy&quot;</span>,</span><br><span class=\"line\">  <span class=\"attr\">&quot;token_type&quot;</span>: <span class=\"string\">&quot;bot&quot;</span>,</span><br><span class=\"line\">  <span class=\"attr\">&quot;scope&quot;</span>: <span class=\"string\">&quot;commands,incoming-webhook&quot;</span>,</span><br><span class=\"line\">  <span class=\"attr\">&quot;bot_user_id&quot;</span>: <span class=\"string\">&quot;U0KRQLJ9H&quot;</span>,</span><br><span class=\"line\">  <span class=\"attr\">&quot;app_id&quot;</span>: <span class=\"string\">&quot;A0KRD7HC3&quot;</span>,</span><br><span class=\"line\">  <span class=\"attr\">&quot;team&quot;</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">&quot;name&quot;</span>: <span class=\"string\">&quot;Slack Softball Team&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;id&quot;</span>: <span class=\"string\">&quot;T9TK3CUKW&quot;</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">&quot;enterprise&quot;</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">&quot;name&quot;</span>: <span class=\"string\">&quot;slack-sports&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;id&quot;</span>: <span class=\"string\">&quot;E12345678&quot;</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">&quot;authed_user&quot;</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">&quot;id&quot;</span>: <span class=\"string\">&quot;U1234&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;scope&quot;</span>: <span class=\"string\">&quot;chat:write&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;access_token&quot;</span>: <span class=\"string\">&quot;xoxp-1234&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;token_type&quot;</span>: <span class=\"string\">&quot;user&quot;</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>이때 TeamID(workspace) 와 코드를 함께 저장해주면 나중에 유저 메시지로부터 반응하는 봇을 만들때 유저 메시지에 포함된 TeamID를 읽어 Access Token 을 DB에서 불러오는 식으로 사용합니다.</p>\n<p><img src=\"/2020/08/17/slack-bot/timebot_sequential.svg\" alt=\"timebot 순서도\" /></p>\n<p>자세한 내용은 <a href=\"https://bit.ly/2Sqdnws\">https://bit.ly/2Sqdnws</a> 에 참여하셔서 문의주세요 😄</p>\n",
            "tags": [
                "Mo Kweon",
                "go",
                "slack",
                "bot",
                "oauth"
            ]
        }
    ]
}